#! /usr/bin/env node
const fs = require('fs').promises;
const path = require('path');
const ejs = require('ejs');
const prettier = require("prettier");

const main = async () => {
    const coins = require('../../../coins.json')
    coins.forEach((coin) => {
        if (!coin['slip44']) {
            coin.slip44 = Number(coin['derivationPath'].split('/')[2].replace('\'', ''));
        }
    })
    await generateCoinType(coins);
};

const generateCoinType = async (coins) => {
    const methods = [
        {
            name: 'id',
            returnType: 'string',
            body: (coin) => `return '${coin.id}'`
        },
        {
            name: 'decimals',
            returnType: 'number',
            body: (coin) => `return ${coin.decimals}`
        },
        {
            name: 'name',
            returnType: 'string',
            body: (coin) => `return '${coin.name}'`
        },
        {
            name: 'derivationPath',
            returnType: 'string',
            body: (coin) => `return "${coin.derivationPath}"`
        },
        {
            name: 'symbol',
            returnType: 'string',
            body: (coin) => `return '${coin.symbol}'`
        },
        {
            name: 'slip44',
            returnType: 'number',
            body: (coin) => `return ${coin.slip44}`
        }
    ];

    const template = await fs.readFile(path.resolve(__dirname, '../templates/core_types.ejs'), 'utf8');
    let data = await ejs.render(template, { coins, methods });
    data = await prettier.format(data, { parser: 'typescript', singleQuote: true, trailingComma: 'es5' });
    await fs.writeFile(path.resolve(__dirname, '../../src/generated/core_types.ts'), data);
};

main();
