// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Bitcoin.proto

package wallet.core.jni.proto;

public final class Bitcoin {
  private Bitcoin() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.Transaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Transaction data format version.
     * </pre>
     *
     * <code>sint32 version = 1;</code>
     */
    int getVersion();

    /**
     * <pre>
     * The block number or timestamp at which this transaction is unlocked.
     * </pre>
     *
     * <code>uint32 lockTime = 2;</code>
     */
    int getLockTime();

    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    java.util.List<wallet.core.jni.proto.Bitcoin.TransactionInput> 
        getInputsList();
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    wallet.core.jni.proto.Bitcoin.TransactionInput getInputs(int index);
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    int getInputsCount();
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    java.util.List<? extends wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder> 
        getInputsOrBuilderList();
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder getInputsOrBuilder(
        int index);

    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    java.util.List<wallet.core.jni.proto.Bitcoin.TransactionOutput> 
        getOutputsList();
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    wallet.core.jni.proto.Bitcoin.TransactionOutput getOutputs(int index);
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    java.util.List<? extends wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder getOutputsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TW.Bitcoin.Proto.Transaction}
   */
  public  static final class Transaction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.Transaction)
      TransactionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Transaction.newBuilder() to construct.
    private Transaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Transaction() {
      inputs_ = java.util.Collections.emptyList();
      outputs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Transaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              version_ = input.readSInt32();
              break;
            }
            case 16: {

              lockTime_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                inputs_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.TransactionInput>();
                mutable_bitField0_ |= 0x00000004;
              }
              inputs_.add(
                  input.readMessage(wallet.core.jni.proto.Bitcoin.TransactionInput.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                outputs_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.TransactionOutput>();
                mutable_bitField0_ |= 0x00000008;
              }
              outputs_.add(
                  input.readMessage(wallet.core.jni.proto.Bitcoin.TransactionOutput.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          inputs_ = java.util.Collections.unmodifiableList(inputs_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_Transaction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.Transaction.class, wallet.core.jni.proto.Bitcoin.Transaction.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * Transaction data format version.
     * </pre>
     *
     * <code>sint32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int LOCKTIME_FIELD_NUMBER = 2;
    private int lockTime_;
    /**
     * <pre>
     * The block number or timestamp at which this transaction is unlocked.
     * </pre>
     *
     * <code>uint32 lockTime = 2;</code>
     */
    public int getLockTime() {
      return lockTime_;
    }

    public static final int INPUTS_FIELD_NUMBER = 3;
    private java.util.List<wallet.core.jni.proto.Bitcoin.TransactionInput> inputs_;
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    public java.util.List<wallet.core.jni.proto.Bitcoin.TransactionInput> getInputsList() {
      return inputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    public wallet.core.jni.proto.Bitcoin.TransactionInput getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <pre>
     * A list of 1 or more transaction inputs or sources for coins.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
     */
    public wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 4;
    private java.util.List<wallet.core.jni.proto.Bitcoin.TransactionOutput> outputs_;
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    public java.util.List<wallet.core.jni.proto.Bitcoin.TransactionOutput> getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    public wallet.core.jni.proto.Bitcoin.TransactionOutput getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * A list of 1 or more transaction outputs or destinations for coins
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
     */
    public wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeSInt32(1, version_);
      }
      if (lockTime_ != 0) {
        output.writeUInt32(2, lockTime_);
      }
      for (int i = 0; i < inputs_.size(); i++) {
        output.writeMessage(3, inputs_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(4, outputs_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, version_);
      }
      if (lockTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lockTime_);
      }
      for (int i = 0; i < inputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, inputs_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, outputs_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.Transaction)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.Transaction other = (wallet.core.jni.proto.Bitcoin.Transaction) obj;

      if (getVersion()
          != other.getVersion()) return false;
      if (getLockTime()
          != other.getLockTime()) return false;
      if (!getInputsList()
          .equals(other.getInputsList())) return false;
      if (!getOutputsList()
          .equals(other.getOutputsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + LOCKTIME_FIELD_NUMBER;
      hash = (53 * hash) + getLockTime();
      if (getInputsCount() > 0) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getInputsList().hashCode();
      }
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.Transaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.Transaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TW.Bitcoin.Proto.Transaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.Transaction)
        wallet.core.jni.proto.Bitcoin.TransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_Transaction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_Transaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.Transaction.class, wallet.core.jni.proto.Bitcoin.Transaction.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.Transaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputsFieldBuilder();
          getOutputsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = 0;

        lockTime_ = 0;

        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          inputsBuilder_.clear();
        }
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_Transaction_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.Transaction getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.Transaction.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.Transaction build() {
        wallet.core.jni.proto.Bitcoin.Transaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.Transaction buildPartial() {
        wallet.core.jni.proto.Bitcoin.Transaction result = new wallet.core.jni.proto.Bitcoin.Transaction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.version_ = version_;
        result.lockTime_ = lockTime_;
        if (inputsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.inputs_ = inputs_;
        } else {
          result.inputs_ = inputsBuilder_.build();
        }
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.Transaction) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.Transaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.Transaction other) {
        if (other == wallet.core.jni.proto.Bitcoin.Transaction.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getLockTime() != 0) {
          setLockTime(other.getLockTime());
        }
        if (inputsBuilder_ == null) {
          if (!other.inputs_.isEmpty()) {
            if (inputs_.isEmpty()) {
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInputsIsMutable();
              inputs_.addAll(other.inputs_);
            }
            onChanged();
          }
        } else {
          if (!other.inputs_.isEmpty()) {
            if (inputsBuilder_.isEmpty()) {
              inputsBuilder_.dispose();
              inputsBuilder_ = null;
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              inputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputsFieldBuilder() : null;
            } else {
              inputsBuilder_.addAllMessages(other.inputs_);
            }
          }
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000008);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.Transaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.Transaction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <pre>
       * Transaction data format version.
       * </pre>
       *
       * <code>sint32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * Transaction data format version.
       * </pre>
       *
       * <code>sint32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction data format version.
       * </pre>
       *
       * <code>sint32 version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int lockTime_ ;
      /**
       * <pre>
       * The block number or timestamp at which this transaction is unlocked.
       * </pre>
       *
       * <code>uint32 lockTime = 2;</code>
       */
      public int getLockTime() {
        return lockTime_;
      }
      /**
       * <pre>
       * The block number or timestamp at which this transaction is unlocked.
       * </pre>
       *
       * <code>uint32 lockTime = 2;</code>
       */
      public Builder setLockTime(int value) {
        
        lockTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The block number or timestamp at which this transaction is unlocked.
       * </pre>
       *
       * <code>uint32 lockTime = 2;</code>
       */
      public Builder clearLockTime() {
        
        lockTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<wallet.core.jni.proto.Bitcoin.TransactionInput> inputs_ =
        java.util.Collections.emptyList();
      private void ensureInputsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          inputs_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.TransactionInput>(inputs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.TransactionInput, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder, wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder> inputsBuilder_;

      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.TransactionInput> getInputsList() {
        if (inputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputs_);
        } else {
          return inputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public int getInputsCount() {
        if (inputsBuilder_ == null) {
          return inputs_.size();
        } else {
          return inputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionInput getInputs(int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);
        } else {
          return inputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionInput value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.set(index, value);
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder setInputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(wallet.core.jni.proto.Bitcoin.TransactionInput value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionInput value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(index, value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(
          wallet.core.jni.proto.Bitcoin.TransactionInput.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addInputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.Bitcoin.TransactionInput> values) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputs_);
          onChanged();
        } else {
          inputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder clearInputs() {
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          inputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public Builder removeInputs(int index) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.remove(index);
          onChanged();
        } else {
          inputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionInput.Builder getInputsBuilder(
          int index) {
        return getInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder getInputsOrBuilder(
          int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);  } else {
          return inputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder> 
           getInputsOrBuilderList() {
        if (inputsBuilder_ != null) {
          return inputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputs_);
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionInput.Builder addInputsBuilder() {
        return getInputsFieldBuilder().addBuilder(
            wallet.core.jni.proto.Bitcoin.TransactionInput.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionInput.Builder addInputsBuilder(
          int index) {
        return getInputsFieldBuilder().addBuilder(
            index, wallet.core.jni.proto.Bitcoin.TransactionInput.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of 1 or more transaction inputs or sources for coins.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionInput inputs = 3;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.TransactionInput.Builder> 
           getInputsBuilderList() {
        return getInputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.TransactionInput, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder, wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder> 
          getInputsFieldBuilder() {
        if (inputsBuilder_ == null) {
          inputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.TransactionInput, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder, wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder>(
                  inputs_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          inputs_ = null;
        }
        return inputsBuilder_;
      }

      private java.util.List<wallet.core.jni.proto.Bitcoin.TransactionOutput> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          outputs_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.TransactionOutput>(outputs_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.TransactionOutput, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder, wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder> outputsBuilder_;

      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.TransactionOutput> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionOutput getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionOutput value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder setOutputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(wallet.core.jni.proto.Bitcoin.TransactionOutput value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionOutput value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(
          wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addOutputs(
          int index, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends wallet.core.jni.proto.Bitcoin.TransactionOutput> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            wallet.core.jni.proto.Bitcoin.TransactionOutput.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, wallet.core.jni.proto.Bitcoin.TransactionOutput.getDefaultInstance());
      }
      /**
       * <pre>
       * A list of 1 or more transaction outputs or destinations for coins
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.TransactionOutput outputs = 4;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.TransactionOutput, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder, wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.TransactionOutput, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder, wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.Transaction)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.Transaction)
    private static final wallet.core.jni.proto.Bitcoin.Transaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.Transaction();
    }

    public static wallet.core.jni.proto.Bitcoin.Transaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Transaction>
        PARSER = new com.google.protobuf.AbstractParser<Transaction>() {
      @java.lang.Override
      public Transaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Transaction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Transaction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Transaction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.Transaction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.TransactionInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    boolean hasPreviousOutput();
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    wallet.core.jni.proto.Bitcoin.OutPoint getPreviousOutput();
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    wallet.core.jni.proto.Bitcoin.OutPointOrBuilder getPreviousOutputOrBuilder();

    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     */
    int getSequence();

    /**
     * <pre>
     * Computational script for confirming transaction authorization.
     * </pre>
     *
     * <code>bytes script = 3;</code>
     */
    com.google.protobuf.ByteString getScript();
  }
  /**
   * <pre>
   * Bitcoin transaction input.
   * </pre>
   *
   * Protobuf type {@code TW.Bitcoin.Proto.TransactionInput}
   */
  public  static final class TransactionInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.TransactionInput)
      TransactionInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionInput.newBuilder() to construct.
    private TransactionInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionInput() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              wallet.core.jni.proto.Bitcoin.OutPoint.Builder subBuilder = null;
              if (previousOutput_ != null) {
                subBuilder = previousOutput_.toBuilder();
              }
              previousOutput_ = input.readMessage(wallet.core.jni.proto.Bitcoin.OutPoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(previousOutput_);
                previousOutput_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              sequence_ = input.readUInt32();
              break;
            }
            case 26: {

              script_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.TransactionInput.class, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder.class);
    }

    public static final int PREVIOUSOUTPUT_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Bitcoin.OutPoint previousOutput_;
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    public boolean hasPreviousOutput() {
      return previousOutput_ != null;
    }
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    public wallet.core.jni.proto.Bitcoin.OutPoint getPreviousOutput() {
      return previousOutput_ == null ? wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : previousOutput_;
    }
    /**
     * <pre>
     * Reference to the previous transaction's output.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
     */
    public wallet.core.jni.proto.Bitcoin.OutPointOrBuilder getPreviousOutputOrBuilder() {
      return getPreviousOutput();
    }

    public static final int SEQUENCE_FIELD_NUMBER = 2;
    private int sequence_;
    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 2;</code>
     */
    public int getSequence() {
      return sequence_;
    }

    public static final int SCRIPT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString script_;
    /**
     * <pre>
     * Computational script for confirming transaction authorization.
     * </pre>
     *
     * <code>bytes script = 3;</code>
     */
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (previousOutput_ != null) {
        output.writeMessage(1, getPreviousOutput());
      }
      if (sequence_ != 0) {
        output.writeUInt32(2, sequence_);
      }
      if (!script_.isEmpty()) {
        output.writeBytes(3, script_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (previousOutput_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPreviousOutput());
      }
      if (sequence_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sequence_);
      }
      if (!script_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, script_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.TransactionInput)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.TransactionInput other = (wallet.core.jni.proto.Bitcoin.TransactionInput) obj;

      if (hasPreviousOutput() != other.hasPreviousOutput()) return false;
      if (hasPreviousOutput()) {
        if (!getPreviousOutput()
            .equals(other.getPreviousOutput())) return false;
      }
      if (getSequence()
          != other.getSequence()) return false;
      if (!getScript()
          .equals(other.getScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPreviousOutput()) {
        hash = (37 * hash) + PREVIOUSOUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getPreviousOutput().hashCode();
      }
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence();
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.TransactionInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Bitcoin transaction input.
     * </pre>
     *
     * Protobuf type {@code TW.Bitcoin.Proto.TransactionInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.TransactionInput)
        wallet.core.jni.proto.Bitcoin.TransactionInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.TransactionInput.class, wallet.core.jni.proto.Bitcoin.TransactionInput.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.TransactionInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (previousOutputBuilder_ == null) {
          previousOutput_ = null;
        } else {
          previousOutput_ = null;
          previousOutputBuilder_ = null;
        }
        sequence_ = 0;

        script_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionInput_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionInput getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.TransactionInput.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionInput build() {
        wallet.core.jni.proto.Bitcoin.TransactionInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionInput buildPartial() {
        wallet.core.jni.proto.Bitcoin.TransactionInput result = new wallet.core.jni.proto.Bitcoin.TransactionInput(this);
        if (previousOutputBuilder_ == null) {
          result.previousOutput_ = previousOutput_;
        } else {
          result.previousOutput_ = previousOutputBuilder_.build();
        }
        result.sequence_ = sequence_;
        result.script_ = script_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.TransactionInput) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.TransactionInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.TransactionInput other) {
        if (other == wallet.core.jni.proto.Bitcoin.TransactionInput.getDefaultInstance()) return this;
        if (other.hasPreviousOutput()) {
          mergePreviousOutput(other.getPreviousOutput());
        }
        if (other.getSequence() != 0) {
          setSequence(other.getSequence());
        }
        if (other.getScript() != com.google.protobuf.ByteString.EMPTY) {
          setScript(other.getScript());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.TransactionInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.TransactionInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private wallet.core.jni.proto.Bitcoin.OutPoint previousOutput_;
      private com.google.protobuf.SingleFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.OutPoint, wallet.core.jni.proto.Bitcoin.OutPoint.Builder, wallet.core.jni.proto.Bitcoin.OutPointOrBuilder> previousOutputBuilder_;
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public boolean hasPreviousOutput() {
        return previousOutputBuilder_ != null || previousOutput_ != null;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.OutPoint getPreviousOutput() {
        if (previousOutputBuilder_ == null) {
          return previousOutput_ == null ? wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : previousOutput_;
        } else {
          return previousOutputBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder setPreviousOutput(wallet.core.jni.proto.Bitcoin.OutPoint value) {
        if (previousOutputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          previousOutput_ = value;
          onChanged();
        } else {
          previousOutputBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder setPreviousOutput(
          wallet.core.jni.proto.Bitcoin.OutPoint.Builder builderForValue) {
        if (previousOutputBuilder_ == null) {
          previousOutput_ = builderForValue.build();
          onChanged();
        } else {
          previousOutputBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder mergePreviousOutput(wallet.core.jni.proto.Bitcoin.OutPoint value) {
        if (previousOutputBuilder_ == null) {
          if (previousOutput_ != null) {
            previousOutput_ =
              wallet.core.jni.proto.Bitcoin.OutPoint.newBuilder(previousOutput_).mergeFrom(value).buildPartial();
          } else {
            previousOutput_ = value;
          }
          onChanged();
        } else {
          previousOutputBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public Builder clearPreviousOutput() {
        if (previousOutputBuilder_ == null) {
          previousOutput_ = null;
          onChanged();
        } else {
          previousOutput_ = null;
          previousOutputBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.OutPoint.Builder getPreviousOutputBuilder() {
        
        onChanged();
        return getPreviousOutputFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.OutPointOrBuilder getPreviousOutputOrBuilder() {
        if (previousOutputBuilder_ != null) {
          return previousOutputBuilder_.getMessageOrBuilder();
        } else {
          return previousOutput_ == null ?
              wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : previousOutput_;
        }
      }
      /**
       * <pre>
       * Reference to the previous transaction's output.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.OutPoint previousOutput = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.OutPoint, wallet.core.jni.proto.Bitcoin.OutPoint.Builder, wallet.core.jni.proto.Bitcoin.OutPointOrBuilder> 
          getPreviousOutputFieldBuilder() {
        if (previousOutputBuilder_ == null) {
          previousOutputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.OutPoint, wallet.core.jni.proto.Bitcoin.OutPoint.Builder, wallet.core.jni.proto.Bitcoin.OutPointOrBuilder>(
                  getPreviousOutput(),
                  getParentForChildren(),
                  isClean());
          previousOutput_ = null;
        }
        return previousOutputBuilder_;
      }

      private int sequence_ ;
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 2;</code>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 2;</code>
       */
      public Builder setSequence(int value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 2;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString script_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Computational script for confirming transaction authorization.
       * </pre>
       *
       * <code>bytes script = 3;</code>
       */
      public com.google.protobuf.ByteString getScript() {
        return script_;
      }
      /**
       * <pre>
       * Computational script for confirming transaction authorization.
       * </pre>
       *
       * <code>bytes script = 3;</code>
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Computational script for confirming transaction authorization.
       * </pre>
       *
       * <code>bytes script = 3;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.TransactionInput)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.TransactionInput)
    private static final wallet.core.jni.proto.Bitcoin.TransactionInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.TransactionInput();
    }

    public static wallet.core.jni.proto.Bitcoin.TransactionInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionInput>
        PARSER = new com.google.protobuf.AbstractParser<TransactionInput>() {
      @java.lang.Override
      public TransactionInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.TransactionInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.OutPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The hash of the referenced transaction.
     * </pre>
     *
     * <code>bytes hash = 1;</code>
     */
    com.google.protobuf.ByteString getHash();

    /**
     * <pre>
     * The index of the specific output in the transaction.
     * </pre>
     *
     * <code>uint32 index = 2;</code>
     */
    int getIndex();

    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 3;</code>
     */
    int getSequence();
  }
  /**
   * <pre>
   * Bitcoin transaction out-point reference.
   * </pre>
   *
   * Protobuf type {@code TW.Bitcoin.Proto.OutPoint}
   */
  public  static final class OutPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.OutPoint)
      OutPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutPoint.newBuilder() to construct.
    private OutPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutPoint() {
      hash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              hash_ = input.readBytes();
              break;
            }
            case 16: {

              index_ = input.readUInt32();
              break;
            }
            case 24: {

              sequence_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_OutPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_OutPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.OutPoint.class, wallet.core.jni.proto.Bitcoin.OutPoint.Builder.class);
    }

    public static final int HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString hash_;
    /**
     * <pre>
     * The hash of the referenced transaction.
     * </pre>
     *
     * <code>bytes hash = 1;</code>
     */
    public com.google.protobuf.ByteString getHash() {
      return hash_;
    }

    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    /**
     * <pre>
     * The index of the specific output in the transaction.
     * </pre>
     *
     * <code>uint32 index = 2;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private int sequence_;
    /**
     * <pre>
     * Transaction version as defined by the sender.
     * </pre>
     *
     * <code>uint32 sequence = 3;</code>
     */
    public int getSequence() {
      return sequence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!hash_.isEmpty()) {
        output.writeBytes(1, hash_);
      }
      if (index_ != 0) {
        output.writeUInt32(2, index_);
      }
      if (sequence_ != 0) {
        output.writeUInt32(3, sequence_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!hash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, hash_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, index_);
      }
      if (sequence_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sequence_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.OutPoint)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.OutPoint other = (wallet.core.jni.proto.Bitcoin.OutPoint) obj;

      if (!getHash()
          .equals(other.getHash())) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (getSequence()
          != other.getSequence()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + getSequence();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.OutPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.OutPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Bitcoin transaction out-point reference.
     * </pre>
     *
     * Protobuf type {@code TW.Bitcoin.Proto.OutPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.OutPoint)
        wallet.core.jni.proto.Bitcoin.OutPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_OutPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_OutPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.OutPoint.class, wallet.core.jni.proto.Bitcoin.OutPoint.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.OutPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        hash_ = com.google.protobuf.ByteString.EMPTY;

        index_ = 0;

        sequence_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_OutPoint_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.OutPoint getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.OutPoint build() {
        wallet.core.jni.proto.Bitcoin.OutPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.OutPoint buildPartial() {
        wallet.core.jni.proto.Bitcoin.OutPoint result = new wallet.core.jni.proto.Bitcoin.OutPoint(this);
        result.hash_ = hash_;
        result.index_ = index_;
        result.sequence_ = sequence_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.OutPoint) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.OutPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.OutPoint other) {
        if (other == wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance()) return this;
        if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
          setHash(other.getHash());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getSequence() != 0) {
          setSequence(other.getSequence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.OutPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.OutPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The hash of the referenced transaction.
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       */
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }
      /**
       * <pre>
       * The hash of the referenced transaction.
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       */
      public Builder setHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hash of the referenced transaction.
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       */
      public Builder clearHash() {
        
        hash_ = getDefaultInstance().getHash();
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       * The index of the specific output in the transaction.
       * </pre>
       *
       * <code>uint32 index = 2;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       * The index of the specific output in the transaction.
       * </pre>
       *
       * <code>uint32 index = 2;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The index of the specific output in the transaction.
       * </pre>
       *
       * <code>uint32 index = 2;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int sequence_ ;
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 3;</code>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 3;</code>
       */
      public Builder setSequence(int value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction version as defined by the sender.
       * </pre>
       *
       * <code>uint32 sequence = 3;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.OutPoint)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.OutPoint)
    private static final wallet.core.jni.proto.Bitcoin.OutPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.OutPoint();
    }

    public static wallet.core.jni.proto.Bitcoin.OutPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutPoint>
        PARSER = new com.google.protobuf.AbstractParser<OutPoint>() {
      @java.lang.Override
      public OutPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.OutPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.TransactionOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Transaction amount.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     */
    long getValue();

    /**
     * <pre>
     * Usually contains the public key as a Bitcoin script setting up conditions to claim this output.
     * </pre>
     *
     * <code>bytes script = 2;</code>
     */
    com.google.protobuf.ByteString getScript();
  }
  /**
   * <pre>
   * Bitcoin transaction output.
   * </pre>
   *
   * Protobuf type {@code TW.Bitcoin.Proto.TransactionOutput}
   */
  public  static final class TransactionOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.TransactionOutput)
      TransactionOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionOutput.newBuilder() to construct.
    private TransactionOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionOutput() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              value_ = input.readInt64();
              break;
            }
            case 18: {

              script_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.TransactionOutput.class, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <pre>
     * Transaction amount.
     * </pre>
     *
     * <code>int64 value = 1;</code>
     */
    public long getValue() {
      return value_;
    }

    public static final int SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString script_;
    /**
     * <pre>
     * Usually contains the public key as a Bitcoin script setting up conditions to claim this output.
     * </pre>
     *
     * <code>bytes script = 2;</code>
     */
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != 0L) {
        output.writeInt64(1, value_);
      }
      if (!script_.isEmpty()) {
        output.writeBytes(2, script_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, value_);
      }
      if (!script_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, script_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.TransactionOutput)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.TransactionOutput other = (wallet.core.jni.proto.Bitcoin.TransactionOutput) obj;

      if (getValue()
          != other.getValue()) return false;
      if (!getScript()
          .equals(other.getScript())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getValue());
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.TransactionOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Bitcoin transaction output.
     * </pre>
     *
     * Protobuf type {@code TW.Bitcoin.Proto.TransactionOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.TransactionOutput)
        wallet.core.jni.proto.Bitcoin.TransactionOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.TransactionOutput.class, wallet.core.jni.proto.Bitcoin.TransactionOutput.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.TransactionOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0L;

        script_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionOutput_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionOutput getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.TransactionOutput.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionOutput build() {
        wallet.core.jni.proto.Bitcoin.TransactionOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionOutput buildPartial() {
        wallet.core.jni.proto.Bitcoin.TransactionOutput result = new wallet.core.jni.proto.Bitcoin.TransactionOutput(this);
        result.value_ = value_;
        result.script_ = script_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.TransactionOutput) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.TransactionOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.TransactionOutput other) {
        if (other == wallet.core.jni.proto.Bitcoin.TransactionOutput.getDefaultInstance()) return this;
        if (other.getValue() != 0L) {
          setValue(other.getValue());
        }
        if (other.getScript() != com.google.protobuf.ByteString.EMPTY) {
          setScript(other.getScript());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.TransactionOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.TransactionOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long value_ ;
      /**
       * <pre>
       * Transaction amount.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <pre>
       * Transaction amount.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       */
      public Builder setValue(long value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction amount.
       * </pre>
       *
       * <code>int64 value = 1;</code>
       */
      public Builder clearValue() {
        
        value_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString script_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Usually contains the public key as a Bitcoin script setting up conditions to claim this output.
       * </pre>
       *
       * <code>bytes script = 2;</code>
       */
      public com.google.protobuf.ByteString getScript() {
        return script_;
      }
      /**
       * <pre>
       * Usually contains the public key as a Bitcoin script setting up conditions to claim this output.
       * </pre>
       *
       * <code>bytes script = 2;</code>
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Usually contains the public key as a Bitcoin script setting up conditions to claim this output.
       * </pre>
       *
       * <code>bytes script = 2;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.TransactionOutput)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.TransactionOutput)
    private static final wallet.core.jni.proto.Bitcoin.TransactionOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.TransactionOutput();
    }

    public static wallet.core.jni.proto.Bitcoin.TransactionOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionOutput>
        PARSER = new com.google.protobuf.AbstractParser<TransactionOutput>() {
      @java.lang.Override
      public TransactionOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.TransactionOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnspentTransactionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.UnspentTransaction)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
     */
    boolean hasOutPoint();
    /**
     * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
     */
    wallet.core.jni.proto.Bitcoin.OutPoint getOutPoint();
    /**
     * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
     */
    wallet.core.jni.proto.Bitcoin.OutPointOrBuilder getOutPointOrBuilder();

    /**
     * <code>bytes script = 2;</code>
     */
    com.google.protobuf.ByteString getScript();

    /**
     * <code>int64 amount = 3;</code>
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code TW.Bitcoin.Proto.UnspentTransaction}
   */
  public  static final class UnspentTransaction extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.UnspentTransaction)
      UnspentTransactionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnspentTransaction.newBuilder() to construct.
    private UnspentTransaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnspentTransaction() {
      script_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnspentTransaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              wallet.core.jni.proto.Bitcoin.OutPoint.Builder subBuilder = null;
              if (outPoint_ != null) {
                subBuilder = outPoint_.toBuilder();
              }
              outPoint_ = input.readMessage(wallet.core.jni.proto.Bitcoin.OutPoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outPoint_);
                outPoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              script_ = input.readBytes();
              break;
            }
            case 24: {

              amount_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_UnspentTransaction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_UnspentTransaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.UnspentTransaction.class, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder.class);
    }

    public static final int OUT_POINT_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Bitcoin.OutPoint outPoint_;
    /**
     * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
     */
    public boolean hasOutPoint() {
      return outPoint_ != null;
    }
    /**
     * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
     */
    public wallet.core.jni.proto.Bitcoin.OutPoint getOutPoint() {
      return outPoint_ == null ? wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : outPoint_;
    }
    /**
     * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
     */
    public wallet.core.jni.proto.Bitcoin.OutPointOrBuilder getOutPointOrBuilder() {
      return getOutPoint();
    }

    public static final int SCRIPT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString script_;
    /**
     * <code>bytes script = 2;</code>
     */
    public com.google.protobuf.ByteString getScript() {
      return script_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <code>int64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (outPoint_ != null) {
        output.writeMessage(1, getOutPoint());
      }
      if (!script_.isEmpty()) {
        output.writeBytes(2, script_);
      }
      if (amount_ != 0L) {
        output.writeInt64(3, amount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (outPoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOutPoint());
      }
      if (!script_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, script_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.UnspentTransaction)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.UnspentTransaction other = (wallet.core.jni.proto.Bitcoin.UnspentTransaction) obj;

      if (hasOutPoint() != other.hasOutPoint()) return false;
      if (hasOutPoint()) {
        if (!getOutPoint()
            .equals(other.getOutPoint())) return false;
      }
      if (!getScript()
          .equals(other.getScript())) return false;
      if (getAmount()
          != other.getAmount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOutPoint()) {
        hash = (37 * hash) + OUT_POINT_FIELD_NUMBER;
        hash = (53 * hash) + getOutPoint().hashCode();
      }
      hash = (37 * hash) + SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getScript().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.UnspentTransaction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TW.Bitcoin.Proto.UnspentTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.UnspentTransaction)
        wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_UnspentTransaction_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_UnspentTransaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.UnspentTransaction.class, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.UnspentTransaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (outPointBuilder_ == null) {
          outPoint_ = null;
        } else {
          outPoint_ = null;
          outPointBuilder_ = null;
        }
        script_ = com.google.protobuf.ByteString.EMPTY;

        amount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_UnspentTransaction_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.UnspentTransaction.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction build() {
        wallet.core.jni.proto.Bitcoin.UnspentTransaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction buildPartial() {
        wallet.core.jni.proto.Bitcoin.UnspentTransaction result = new wallet.core.jni.proto.Bitcoin.UnspentTransaction(this);
        if (outPointBuilder_ == null) {
          result.outPoint_ = outPoint_;
        } else {
          result.outPoint_ = outPointBuilder_.build();
        }
        result.script_ = script_;
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.UnspentTransaction) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.UnspentTransaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.UnspentTransaction other) {
        if (other == wallet.core.jni.proto.Bitcoin.UnspentTransaction.getDefaultInstance()) return this;
        if (other.hasOutPoint()) {
          mergeOutPoint(other.getOutPoint());
        }
        if (other.getScript() != com.google.protobuf.ByteString.EMPTY) {
          setScript(other.getScript());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.UnspentTransaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.UnspentTransaction) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private wallet.core.jni.proto.Bitcoin.OutPoint outPoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.OutPoint, wallet.core.jni.proto.Bitcoin.OutPoint.Builder, wallet.core.jni.proto.Bitcoin.OutPointOrBuilder> outPointBuilder_;
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public boolean hasOutPoint() {
        return outPointBuilder_ != null || outPoint_ != null;
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.OutPoint getOutPoint() {
        if (outPointBuilder_ == null) {
          return outPoint_ == null ? wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : outPoint_;
        } else {
          return outPointBuilder_.getMessage();
        }
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(wallet.core.jni.proto.Bitcoin.OutPoint value) {
        if (outPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outPoint_ = value;
          onChanged();
        } else {
          outPointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public Builder setOutPoint(
          wallet.core.jni.proto.Bitcoin.OutPoint.Builder builderForValue) {
        if (outPointBuilder_ == null) {
          outPoint_ = builderForValue.build();
          onChanged();
        } else {
          outPointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public Builder mergeOutPoint(wallet.core.jni.proto.Bitcoin.OutPoint value) {
        if (outPointBuilder_ == null) {
          if (outPoint_ != null) {
            outPoint_ =
              wallet.core.jni.proto.Bitcoin.OutPoint.newBuilder(outPoint_).mergeFrom(value).buildPartial();
          } else {
            outPoint_ = value;
          }
          onChanged();
        } else {
          outPointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public Builder clearOutPoint() {
        if (outPointBuilder_ == null) {
          outPoint_ = null;
          onChanged();
        } else {
          outPoint_ = null;
          outPointBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.OutPoint.Builder getOutPointBuilder() {
        
        onChanged();
        return getOutPointFieldBuilder().getBuilder();
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.OutPointOrBuilder getOutPointOrBuilder() {
        if (outPointBuilder_ != null) {
          return outPointBuilder_.getMessageOrBuilder();
        } else {
          return outPoint_ == null ?
              wallet.core.jni.proto.Bitcoin.OutPoint.getDefaultInstance() : outPoint_;
        }
      }
      /**
       * <code>.TW.Bitcoin.Proto.OutPoint out_point = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.OutPoint, wallet.core.jni.proto.Bitcoin.OutPoint.Builder, wallet.core.jni.proto.Bitcoin.OutPointOrBuilder> 
          getOutPointFieldBuilder() {
        if (outPointBuilder_ == null) {
          outPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.OutPoint, wallet.core.jni.proto.Bitcoin.OutPoint.Builder, wallet.core.jni.proto.Bitcoin.OutPointOrBuilder>(
                  getOutPoint(),
                  getParentForChildren(),
                  isClean());
          outPoint_ = null;
        }
        return outPointBuilder_;
      }

      private com.google.protobuf.ByteString script_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes script = 2;</code>
       */
      public com.google.protobuf.ByteString getScript() {
        return script_;
      }
      /**
       * <code>bytes script = 2;</code>
       */
      public Builder setScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        script_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes script = 2;</code>
       */
      public Builder clearScript() {
        
        script_ = getDefaultInstance().getScript();
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <code>int64 amount = 3;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>int64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 amount = 3;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.UnspentTransaction)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.UnspentTransaction)
    private static final wallet.core.jni.proto.Bitcoin.UnspentTransaction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.UnspentTransaction();
    }

    public static wallet.core.jni.proto.Bitcoin.UnspentTransaction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnspentTransaction>
        PARSER = new com.google.protobuf.AbstractParser<UnspentTransaction>() {
      @java.lang.Override
      public UnspentTransaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnspentTransaction(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnspentTransaction> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnspentTransaction> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.UnspentTransaction getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.SigningInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Hash type to use when signing.
     * </pre>
     *
     * <code>uint32 hash_type = 1;</code>
     */
    int getHashType();

    /**
     * <pre>
     * Amount to send.
     * </pre>
     *
     * <code>int64 amount = 2;</code>
     */
    long getAmount();

    /**
     * <pre>
     * Transaction fee per byte.
     * </pre>
     *
     * <code>int64 byte_fee = 3;</code>
     */
    long getByteFee();

    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 4;</code>
     */
    java.lang.String getToAddress();
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 4;</code>
     */
    com.google.protobuf.ByteString
        getToAddressBytes();

    /**
     * <pre>
     * Change address.
     * </pre>
     *
     * <code>string change_address = 5;</code>
     */
    java.lang.String getChangeAddress();
    /**
     * <pre>
     * Change address.
     * </pre>
     *
     * <code>string change_address = 5;</code>
     */
    com.google.protobuf.ByteString
        getChangeAddressBytes();

    /**
     * <pre>
     * Available private keys.
     * </pre>
     *
     * <code>repeated bytes private_key = 10;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getPrivateKeyList();
    /**
     * <pre>
     * Available private keys.
     * </pre>
     *
     * <code>repeated bytes private_key = 10;</code>
     */
    int getPrivateKeyCount();
    /**
     * <pre>
     * Available private keys.
     * </pre>
     *
     * <code>repeated bytes private_key = 10;</code>
     */
    com.google.protobuf.ByteString getPrivateKey(int index);

    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    int getScriptsCount();
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    boolean containsScripts(
        java.lang.String key);
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getScripts();
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getScriptsMap();
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    com.google.protobuf.ByteString getScriptsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    com.google.protobuf.ByteString getScriptsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> 
        getUtxoList();
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    wallet.core.jni.proto.Bitcoin.UnspentTransaction getUtxo(int index);
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    int getUtxoCount();
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    java.util.List<? extends wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
        getUtxoOrBuilderList();
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder getUtxoOrBuilder(
        int index);

    /**
     * <pre>
     * If sending max amount.
     * </pre>
     *
     * <code>bool use_max_amount = 13;</code>
     */
    boolean getUseMaxAmount();

    /**
     * <pre>
     * Coin type (forks).
     * </pre>
     *
     * <code>uint32 coin_type = 14;</code>
     */
    int getCoinType();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.Bitcoin.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.SigningInput)
      SigningInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SigningInput.newBuilder() to construct.
    private SigningInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SigningInput() {
      toAddress_ = "";
      changeAddress_ = "";
      privateKey_ = java.util.Collections.emptyList();
      utxo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SigningInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              hashType_ = input.readUInt32();
              break;
            }
            case 16: {

              amount_ = input.readInt64();
              break;
            }
            case 24: {

              byteFee_ = input.readInt64();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              toAddress_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              changeAddress_ = s;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                privateKey_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000020;
              }
              privateKey_.add(input.readBytes());
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                scripts_ = com.google.protobuf.MapField.newMapField(
                    ScriptsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              scripts__ = input.readMessage(
                  ScriptsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              scripts_.getMutableMap().put(
                  scripts__.getKey(), scripts__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                utxo_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.UnspentTransaction>();
                mutable_bitField0_ |= 0x00000080;
              }
              utxo_.add(
                  input.readMessage(wallet.core.jni.proto.Bitcoin.UnspentTransaction.parser(), extensionRegistry));
              break;
            }
            case 104: {

              useMaxAmount_ = input.readBool();
              break;
            }
            case 112: {

              coinType_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          privateKey_ = java.util.Collections.unmodifiableList(privateKey_); // C
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          utxo_ = java.util.Collections.unmodifiableList(utxo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningInput_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetScripts();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.SigningInput.class, wallet.core.jni.proto.Bitcoin.SigningInput.Builder.class);
    }

    private int bitField0_;
    public static final int HASH_TYPE_FIELD_NUMBER = 1;
    private int hashType_;
    /**
     * <pre>
     * Hash type to use when signing.
     * </pre>
     *
     * <code>uint32 hash_type = 1;</code>
     */
    public int getHashType() {
      return hashType_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <pre>
     * Amount to send.
     * </pre>
     *
     * <code>int64 amount = 2;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int BYTE_FEE_FIELD_NUMBER = 3;
    private long byteFee_;
    /**
     * <pre>
     * Transaction fee per byte.
     * </pre>
     *
     * <code>int64 byte_fee = 3;</code>
     */
    public long getByteFee() {
      return byteFee_;
    }

    public static final int TO_ADDRESS_FIELD_NUMBER = 4;
    private volatile java.lang.Object toAddress_;
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 4;</code>
     */
    public java.lang.String getToAddress() {
      java.lang.Object ref = toAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        toAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Recipient's address.
     * </pre>
     *
     * <code>string to_address = 4;</code>
     */
    public com.google.protobuf.ByteString
        getToAddressBytes() {
      java.lang.Object ref = toAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        toAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANGE_ADDRESS_FIELD_NUMBER = 5;
    private volatile java.lang.Object changeAddress_;
    /**
     * <pre>
     * Change address.
     * </pre>
     *
     * <code>string change_address = 5;</code>
     */
    public java.lang.String getChangeAddress() {
      java.lang.Object ref = changeAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        changeAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Change address.
     * </pre>
     *
     * <code>string change_address = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChangeAddressBytes() {
      java.lang.Object ref = changeAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        changeAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 10;
    private java.util.List<com.google.protobuf.ByteString> privateKey_;
    /**
     * <pre>
     * Available private keys.
     * </pre>
     *
     * <code>repeated bytes private_key = 10;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPrivateKeyList() {
      return privateKey_;
    }
    /**
     * <pre>
     * Available private keys.
     * </pre>
     *
     * <code>repeated bytes private_key = 10;</code>
     */
    public int getPrivateKeyCount() {
      return privateKey_.size();
    }
    /**
     * <pre>
     * Available private keys.
     * </pre>
     *
     * <code>repeated bytes private_key = 10;</code>
     */
    public com.google.protobuf.ByteString getPrivateKey(int index) {
      return privateKey_.get(index);
    }

    public static final int SCRIPTS_FIELD_NUMBER = 11;
    private static final class ScriptsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningInput_ScriptsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> scripts_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetScripts() {
      if (scripts_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ScriptsDefaultEntryHolder.defaultEntry);
      }
      return scripts_;
    }

    public int getScriptsCount() {
      return internalGetScripts().getMap().size();
    }
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public boolean containsScripts(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetScripts().getMap().containsKey(key);
    }
    /**
     * Use {@link #getScriptsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScripts() {
      return getScriptsMap();
    }
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScriptsMap() {
      return internalGetScripts().getMap();
    }
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public com.google.protobuf.ByteString getScriptsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetScripts().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Available redeem scripts indexed by script hash.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; scripts = 11;</code>
     */

    public com.google.protobuf.ByteString getScriptsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetScripts().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int UTXO_FIELD_NUMBER = 12;
    private java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> utxo_;
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    public java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> getUtxoList() {
      return utxo_;
    }
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
        getUtxoOrBuilderList() {
      return utxo_;
    }
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    public int getUtxoCount() {
      return utxo_.size();
    }
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    public wallet.core.jni.proto.Bitcoin.UnspentTransaction getUtxo(int index) {
      return utxo_.get(index);
    }
    /**
     * <pre>
     * Available unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
     */
    public wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder getUtxoOrBuilder(
        int index) {
      return utxo_.get(index);
    }

    public static final int USE_MAX_AMOUNT_FIELD_NUMBER = 13;
    private boolean useMaxAmount_;
    /**
     * <pre>
     * If sending max amount.
     * </pre>
     *
     * <code>bool use_max_amount = 13;</code>
     */
    public boolean getUseMaxAmount() {
      return useMaxAmount_;
    }

    public static final int COIN_TYPE_FIELD_NUMBER = 14;
    private int coinType_;
    /**
     * <pre>
     * Coin type (forks).
     * </pre>
     *
     * <code>uint32 coin_type = 14;</code>
     */
    public int getCoinType() {
      return coinType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hashType_ != 0) {
        output.writeUInt32(1, hashType_);
      }
      if (amount_ != 0L) {
        output.writeInt64(2, amount_);
      }
      if (byteFee_ != 0L) {
        output.writeInt64(3, byteFee_);
      }
      if (!getToAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, toAddress_);
      }
      if (!getChangeAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, changeAddress_);
      }
      for (int i = 0; i < privateKey_.size(); i++) {
        output.writeBytes(10, privateKey_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetScripts(),
          ScriptsDefaultEntryHolder.defaultEntry,
          11);
      for (int i = 0; i < utxo_.size(); i++) {
        output.writeMessage(12, utxo_.get(i));
      }
      if (useMaxAmount_ != false) {
        output.writeBool(13, useMaxAmount_);
      }
      if (coinType_ != 0) {
        output.writeUInt32(14, coinType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hashType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, hashType_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, amount_);
      }
      if (byteFee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, byteFee_);
      }
      if (!getToAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, toAddress_);
      }
      if (!getChangeAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, changeAddress_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < privateKey_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(privateKey_.get(i));
        }
        size += dataSize;
        size += 1 * getPrivateKeyList().size();
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetScripts().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        scripts__ = ScriptsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, scripts__);
      }
      for (int i = 0; i < utxo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, utxo_.get(i));
      }
      if (useMaxAmount_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, useMaxAmount_);
      }
      if (coinType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, coinType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.SigningInput)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.SigningInput other = (wallet.core.jni.proto.Bitcoin.SigningInput) obj;

      if (getHashType()
          != other.getHashType()) return false;
      if (getAmount()
          != other.getAmount()) return false;
      if (getByteFee()
          != other.getByteFee()) return false;
      if (!getToAddress()
          .equals(other.getToAddress())) return false;
      if (!getChangeAddress()
          .equals(other.getChangeAddress())) return false;
      if (!getPrivateKeyList()
          .equals(other.getPrivateKeyList())) return false;
      if (!internalGetScripts().equals(
          other.internalGetScripts())) return false;
      if (!getUtxoList()
          .equals(other.getUtxoList())) return false;
      if (getUseMaxAmount()
          != other.getUseMaxAmount()) return false;
      if (getCoinType()
          != other.getCoinType()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HASH_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getHashType();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + BYTE_FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getByteFee());
      hash = (37 * hash) + TO_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getToAddress().hashCode();
      hash = (37 * hash) + CHANGE_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getChangeAddress().hashCode();
      if (getPrivateKeyCount() > 0) {
        hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateKeyList().hashCode();
      }
      if (!internalGetScripts().getMap().isEmpty()) {
        hash = (37 * hash) + SCRIPTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetScripts().hashCode();
      }
      if (getUtxoCount() > 0) {
        hash = (37 * hash) + UTXO_FIELD_NUMBER;
        hash = (53 * hash) + getUtxoList().hashCode();
      }
      hash = (37 * hash) + USE_MAX_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUseMaxAmount());
      hash = (37 * hash) + COIN_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCoinType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.SigningInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.Bitcoin.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.SigningInput)
        wallet.core.jni.proto.Bitcoin.SigningInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningInput_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetScripts();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableScripts();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.SigningInput.class, wallet.core.jni.proto.Bitcoin.SigningInput.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.SigningInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUtxoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        hashType_ = 0;

        amount_ = 0L;

        byteFee_ = 0L;

        toAddress_ = "";

        changeAddress_ = "";

        privateKey_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutableScripts().clear();
        if (utxoBuilder_ == null) {
          utxo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          utxoBuilder_.clear();
        }
        useMaxAmount_ = false;

        coinType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningInput_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningInput getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.SigningInput.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningInput build() {
        wallet.core.jni.proto.Bitcoin.SigningInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningInput buildPartial() {
        wallet.core.jni.proto.Bitcoin.SigningInput result = new wallet.core.jni.proto.Bitcoin.SigningInput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.hashType_ = hashType_;
        result.amount_ = amount_;
        result.byteFee_ = byteFee_;
        result.toAddress_ = toAddress_;
        result.changeAddress_ = changeAddress_;
        if (((bitField0_ & 0x00000020) != 0)) {
          privateKey_ = java.util.Collections.unmodifiableList(privateKey_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.privateKey_ = privateKey_;
        result.scripts_ = internalGetScripts();
        result.scripts_.makeImmutable();
        if (utxoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            utxo_ = java.util.Collections.unmodifiableList(utxo_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.utxo_ = utxo_;
        } else {
          result.utxo_ = utxoBuilder_.build();
        }
        result.useMaxAmount_ = useMaxAmount_;
        result.coinType_ = coinType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.SigningInput) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.SigningInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.SigningInput other) {
        if (other == wallet.core.jni.proto.Bitcoin.SigningInput.getDefaultInstance()) return this;
        if (other.getHashType() != 0) {
          setHashType(other.getHashType());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (other.getByteFee() != 0L) {
          setByteFee(other.getByteFee());
        }
        if (!other.getToAddress().isEmpty()) {
          toAddress_ = other.toAddress_;
          onChanged();
        }
        if (!other.getChangeAddress().isEmpty()) {
          changeAddress_ = other.changeAddress_;
          onChanged();
        }
        if (!other.privateKey_.isEmpty()) {
          if (privateKey_.isEmpty()) {
            privateKey_ = other.privateKey_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePrivateKeyIsMutable();
            privateKey_.addAll(other.privateKey_);
          }
          onChanged();
        }
        internalGetMutableScripts().mergeFrom(
            other.internalGetScripts());
        if (utxoBuilder_ == null) {
          if (!other.utxo_.isEmpty()) {
            if (utxo_.isEmpty()) {
              utxo_ = other.utxo_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureUtxoIsMutable();
              utxo_.addAll(other.utxo_);
            }
            onChanged();
          }
        } else {
          if (!other.utxo_.isEmpty()) {
            if (utxoBuilder_.isEmpty()) {
              utxoBuilder_.dispose();
              utxoBuilder_ = null;
              utxo_ = other.utxo_;
              bitField0_ = (bitField0_ & ~0x00000080);
              utxoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUtxoFieldBuilder() : null;
            } else {
              utxoBuilder_.addAllMessages(other.utxo_);
            }
          }
        }
        if (other.getUseMaxAmount() != false) {
          setUseMaxAmount(other.getUseMaxAmount());
        }
        if (other.getCoinType() != 0) {
          setCoinType(other.getCoinType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.SigningInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.SigningInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int hashType_ ;
      /**
       * <pre>
       * Hash type to use when signing.
       * </pre>
       *
       * <code>uint32 hash_type = 1;</code>
       */
      public int getHashType() {
        return hashType_;
      }
      /**
       * <pre>
       * Hash type to use when signing.
       * </pre>
       *
       * <code>uint32 hash_type = 1;</code>
       */
      public Builder setHashType(int value) {
        
        hashType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Hash type to use when signing.
       * </pre>
       *
       * <code>uint32 hash_type = 1;</code>
       */
      public Builder clearHashType() {
        
        hashType_ = 0;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <pre>
       * Amount to send.
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount to send.
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount to send.
       * </pre>
       *
       * <code>int64 amount = 2;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }

      private long byteFee_ ;
      /**
       * <pre>
       * Transaction fee per byte.
       * </pre>
       *
       * <code>int64 byte_fee = 3;</code>
       */
      public long getByteFee() {
        return byteFee_;
      }
      /**
       * <pre>
       * Transaction fee per byte.
       * </pre>
       *
       * <code>int64 byte_fee = 3;</code>
       */
      public Builder setByteFee(long value) {
        
        byteFee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction fee per byte.
       * </pre>
       *
       * <code>int64 byte_fee = 3;</code>
       */
      public Builder clearByteFee() {
        
        byteFee_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object toAddress_ = "";
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 4;</code>
       */
      public java.lang.String getToAddress() {
        java.lang.Object ref = toAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          toAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 4;</code>
       */
      public com.google.protobuf.ByteString
          getToAddressBytes() {
        java.lang.Object ref = toAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          toAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 4;</code>
       */
      public Builder setToAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        toAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 4;</code>
       */
      public Builder clearToAddress() {
        
        toAddress_ = getDefaultInstance().getToAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Recipient's address.
       * </pre>
       *
       * <code>string to_address = 4;</code>
       */
      public Builder setToAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        toAddress_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object changeAddress_ = "";
      /**
       * <pre>
       * Change address.
       * </pre>
       *
       * <code>string change_address = 5;</code>
       */
      public java.lang.String getChangeAddress() {
        java.lang.Object ref = changeAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          changeAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Change address.
       * </pre>
       *
       * <code>string change_address = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChangeAddressBytes() {
        java.lang.Object ref = changeAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          changeAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Change address.
       * </pre>
       *
       * <code>string change_address = 5;</code>
       */
      public Builder setChangeAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        changeAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Change address.
       * </pre>
       *
       * <code>string change_address = 5;</code>
       */
      public Builder clearChangeAddress() {
        
        changeAddress_ = getDefaultInstance().getChangeAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Change address.
       * </pre>
       *
       * <code>string change_address = 5;</code>
       */
      public Builder setChangeAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        changeAddress_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> privateKey_ = java.util.Collections.emptyList();
      private void ensurePrivateKeyIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          privateKey_ = new java.util.ArrayList<com.google.protobuf.ByteString>(privateKey_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getPrivateKeyList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(privateKey_) : privateKey_;
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public int getPrivateKeyCount() {
        return privateKey_.size();
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public com.google.protobuf.ByteString getPrivateKey(int index) {
        return privateKey_.get(index);
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder setPrivateKey(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePrivateKeyIsMutable();
        privateKey_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder addPrivateKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePrivateKeyIsMutable();
        privateKey_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder addAllPrivateKey(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensurePrivateKeyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, privateKey_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Available private keys.
       * </pre>
       *
       * <code>repeated bytes private_key = 10;</code>
       */
      public Builder clearPrivateKey() {
        privateKey_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> scripts_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetScripts() {
        if (scripts_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ScriptsDefaultEntryHolder.defaultEntry);
        }
        return scripts_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableScripts() {
        onChanged();;
        if (scripts_ == null) {
          scripts_ = com.google.protobuf.MapField.newMapField(
              ScriptsDefaultEntryHolder.defaultEntry);
        }
        if (!scripts_.isMutable()) {
          scripts_ = scripts_.copy();
        }
        return scripts_;
      }

      public int getScriptsCount() {
        return internalGetScripts().getMap().size();
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public boolean containsScripts(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetScripts().getMap().containsKey(key);
      }
      /**
       * Use {@link #getScriptsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScripts() {
        return getScriptsMap();
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getScriptsMap() {
        return internalGetScripts().getMap();
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public com.google.protobuf.ByteString getScriptsOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetScripts().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public com.google.protobuf.ByteString getScriptsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetScripts().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearScripts() {
        internalGetMutableScripts().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public Builder removeScripts(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableScripts().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableScripts() {
        return internalGetMutableScripts().getMutableMap();
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */
      public Builder putScripts(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableScripts().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Available redeem scripts indexed by script hash.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; scripts = 11;</code>
       */

      public Builder putAllScripts(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableScripts().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> utxo_ =
        java.util.Collections.emptyList();
      private void ensureUtxoIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          utxo_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.UnspentTransaction>(utxo_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.UnspentTransaction, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder, wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> utxoBuilder_;

      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> getUtxoList() {
        if (utxoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(utxo_);
        } else {
          return utxoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public int getUtxoCount() {
        if (utxoBuilder_ == null) {
          return utxo_.size();
        } else {
          return utxoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction getUtxo(int index) {
        if (utxoBuilder_ == null) {
          return utxo_.get(index);
        } else {
          return utxoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder setUtxo(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction value) {
        if (utxoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtxoIsMutable();
          utxo_.set(index, value);
          onChanged();
        } else {
          utxoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder setUtxo(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder builderForValue) {
        if (utxoBuilder_ == null) {
          ensureUtxoIsMutable();
          utxo_.set(index, builderForValue.build());
          onChanged();
        } else {
          utxoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(wallet.core.jni.proto.Bitcoin.UnspentTransaction value) {
        if (utxoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtxoIsMutable();
          utxo_.add(value);
          onChanged();
        } else {
          utxoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction value) {
        if (utxoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtxoIsMutable();
          utxo_.add(index, value);
          onChanged();
        } else {
          utxoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder builderForValue) {
        if (utxoBuilder_ == null) {
          ensureUtxoIsMutable();
          utxo_.add(builderForValue.build());
          onChanged();
        } else {
          utxoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder addUtxo(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder builderForValue) {
        if (utxoBuilder_ == null) {
          ensureUtxoIsMutable();
          utxo_.add(index, builderForValue.build());
          onChanged();
        } else {
          utxoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder addAllUtxo(
          java.lang.Iterable<? extends wallet.core.jni.proto.Bitcoin.UnspentTransaction> values) {
        if (utxoBuilder_ == null) {
          ensureUtxoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, utxo_);
          onChanged();
        } else {
          utxoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder clearUtxo() {
        if (utxoBuilder_ == null) {
          utxo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          utxoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public Builder removeUtxo(int index) {
        if (utxoBuilder_ == null) {
          ensureUtxoIsMutable();
          utxo_.remove(index);
          onChanged();
        } else {
          utxoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder getUtxoBuilder(
          int index) {
        return getUtxoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder getUtxoOrBuilder(
          int index) {
        if (utxoBuilder_ == null) {
          return utxo_.get(index);  } else {
          return utxoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
           getUtxoOrBuilderList() {
        if (utxoBuilder_ != null) {
          return utxoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(utxo_);
        }
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder addUtxoBuilder() {
        return getUtxoFieldBuilder().addBuilder(
            wallet.core.jni.proto.Bitcoin.UnspentTransaction.getDefaultInstance());
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder addUtxoBuilder(
          int index) {
        return getUtxoFieldBuilder().addBuilder(
            index, wallet.core.jni.proto.Bitcoin.UnspentTransaction.getDefaultInstance());
      }
      /**
       * <pre>
       * Available unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxo = 12;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder> 
           getUtxoBuilderList() {
        return getUtxoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.UnspentTransaction, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder, wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
          getUtxoFieldBuilder() {
        if (utxoBuilder_ == null) {
          utxoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.UnspentTransaction, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder, wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder>(
                  utxo_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          utxo_ = null;
        }
        return utxoBuilder_;
      }

      private boolean useMaxAmount_ ;
      /**
       * <pre>
       * If sending max amount.
       * </pre>
       *
       * <code>bool use_max_amount = 13;</code>
       */
      public boolean getUseMaxAmount() {
        return useMaxAmount_;
      }
      /**
       * <pre>
       * If sending max amount.
       * </pre>
       *
       * <code>bool use_max_amount = 13;</code>
       */
      public Builder setUseMaxAmount(boolean value) {
        
        useMaxAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If sending max amount.
       * </pre>
       *
       * <code>bool use_max_amount = 13;</code>
       */
      public Builder clearUseMaxAmount() {
        
        useMaxAmount_ = false;
        onChanged();
        return this;
      }

      private int coinType_ ;
      /**
       * <pre>
       * Coin type (forks).
       * </pre>
       *
       * <code>uint32 coin_type = 14;</code>
       */
      public int getCoinType() {
        return coinType_;
      }
      /**
       * <pre>
       * Coin type (forks).
       * </pre>
       *
       * <code>uint32 coin_type = 14;</code>
       */
      public Builder setCoinType(int value) {
        
        coinType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Coin type (forks).
       * </pre>
       *
       * <code>uint32 coin_type = 14;</code>
       */
      public Builder clearCoinType() {
        
        coinType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.SigningInput)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.SigningInput)
    private static final wallet.core.jni.proto.Bitcoin.SigningInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.SigningInput();
    }

    public static wallet.core.jni.proto.Bitcoin.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SigningInput>
        PARSER = new com.google.protobuf.AbstractParser<SigningInput>() {
      @java.lang.Override
      public SigningInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SigningInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SigningInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.SigningInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.TransactionPlan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; Amount to be received at the other end.
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     */
    long getAmount();

    /**
     * <pre>
     *&#47; Maximum available amount.
     * </pre>
     *
     * <code>int64 available_amount = 2;</code>
     */
    long getAvailableAmount();

    /**
     * <pre>
     *&#47; Estimated transaction fee.
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     */
    long getFee();

    /**
     * <pre>
     *&#47; Change.
     * </pre>
     *
     * <code>int64 change = 4;</code>
     */
    long getChange();

    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> 
        getUtxosList();
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    wallet.core.jni.proto.Bitcoin.UnspentTransaction getUtxos(int index);
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    int getUtxosCount();
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    java.util.List<? extends wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
        getUtxosOrBuilderList();
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder getUtxosOrBuilder(
        int index);
  }
  /**
   * <pre>
   *&#47; Describes a preliminary transaction plan.
   * </pre>
   *
   * Protobuf type {@code TW.Bitcoin.Proto.TransactionPlan}
   */
  public  static final class TransactionPlan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.TransactionPlan)
      TransactionPlanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransactionPlan.newBuilder() to construct.
    private TransactionPlan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionPlan() {
      utxos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionPlan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              amount_ = input.readInt64();
              break;
            }
            case 16: {

              availableAmount_ = input.readInt64();
              break;
            }
            case 24: {

              fee_ = input.readInt64();
              break;
            }
            case 32: {

              change_ = input.readInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                utxos_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.UnspentTransaction>();
                mutable_bitField0_ |= 0x00000010;
              }
              utxos_.add(
                  input.readMessage(wallet.core.jni.proto.Bitcoin.UnspentTransaction.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          utxos_ = java.util.Collections.unmodifiableList(utxos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionPlan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionPlan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.TransactionPlan.class, wallet.core.jni.proto.Bitcoin.TransactionPlan.Builder.class);
    }

    private int bitField0_;
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private long amount_;
    /**
     * <pre>
     *&#47; Amount to be received at the other end.
     * </pre>
     *
     * <code>int64 amount = 1;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int AVAILABLE_AMOUNT_FIELD_NUMBER = 2;
    private long availableAmount_;
    /**
     * <pre>
     *&#47; Maximum available amount.
     * </pre>
     *
     * <code>int64 available_amount = 2;</code>
     */
    public long getAvailableAmount() {
      return availableAmount_;
    }

    public static final int FEE_FIELD_NUMBER = 3;
    private long fee_;
    /**
     * <pre>
     *&#47; Estimated transaction fee.
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     */
    public long getFee() {
      return fee_;
    }

    public static final int CHANGE_FIELD_NUMBER = 4;
    private long change_;
    /**
     * <pre>
     *&#47; Change.
     * </pre>
     *
     * <code>int64 change = 4;</code>
     */
    public long getChange() {
      return change_;
    }

    public static final int UTXOS_FIELD_NUMBER = 5;
    private java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> utxos_;
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    public java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> getUtxosList() {
      return utxos_;
    }
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
        getUtxosOrBuilderList() {
      return utxos_;
    }
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    public int getUtxosCount() {
      return utxos_.size();
    }
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    public wallet.core.jni.proto.Bitcoin.UnspentTransaction getUtxos(int index) {
      return utxos_.get(index);
    }
    /**
     * <pre>
     *&#47; Selected unspent transaction outputs.
     * </pre>
     *
     * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
     */
    public wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder getUtxosOrBuilder(
        int index) {
      return utxos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (amount_ != 0L) {
        output.writeInt64(1, amount_);
      }
      if (availableAmount_ != 0L) {
        output.writeInt64(2, availableAmount_);
      }
      if (fee_ != 0L) {
        output.writeInt64(3, fee_);
      }
      if (change_ != 0L) {
        output.writeInt64(4, change_);
      }
      for (int i = 0; i < utxos_.size(); i++) {
        output.writeMessage(5, utxos_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, amount_);
      }
      if (availableAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, availableAmount_);
      }
      if (fee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, fee_);
      }
      if (change_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, change_);
      }
      for (int i = 0; i < utxos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, utxos_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.TransactionPlan)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.TransactionPlan other = (wallet.core.jni.proto.Bitcoin.TransactionPlan) obj;

      if (getAmount()
          != other.getAmount()) return false;
      if (getAvailableAmount()
          != other.getAvailableAmount()) return false;
      if (getFee()
          != other.getFee()) return false;
      if (getChange()
          != other.getChange()) return false;
      if (!getUtxosList()
          .equals(other.getUtxosList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + AVAILABLE_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAvailableAmount());
      hash = (37 * hash) + FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFee());
      hash = (37 * hash) + CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChange());
      if (getUtxosCount() > 0) {
        hash = (37 * hash) + UTXOS_FIELD_NUMBER;
        hash = (53 * hash) + getUtxosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.TransactionPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.TransactionPlan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *&#47; Describes a preliminary transaction plan.
     * </pre>
     *
     * Protobuf type {@code TW.Bitcoin.Proto.TransactionPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.TransactionPlan)
        wallet.core.jni.proto.Bitcoin.TransactionPlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionPlan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionPlan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.TransactionPlan.class, wallet.core.jni.proto.Bitcoin.TransactionPlan.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.TransactionPlan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUtxosFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amount_ = 0L;

        availableAmount_ = 0L;

        fee_ = 0L;

        change_ = 0L;

        if (utxosBuilder_ == null) {
          utxos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          utxosBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_TransactionPlan_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionPlan getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.TransactionPlan.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionPlan build() {
        wallet.core.jni.proto.Bitcoin.TransactionPlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.TransactionPlan buildPartial() {
        wallet.core.jni.proto.Bitcoin.TransactionPlan result = new wallet.core.jni.proto.Bitcoin.TransactionPlan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.amount_ = amount_;
        result.availableAmount_ = availableAmount_;
        result.fee_ = fee_;
        result.change_ = change_;
        if (utxosBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            utxos_ = java.util.Collections.unmodifiableList(utxos_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.utxos_ = utxos_;
        } else {
          result.utxos_ = utxosBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.TransactionPlan) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.TransactionPlan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.TransactionPlan other) {
        if (other == wallet.core.jni.proto.Bitcoin.TransactionPlan.getDefaultInstance()) return this;
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (other.getAvailableAmount() != 0L) {
          setAvailableAmount(other.getAvailableAmount());
        }
        if (other.getFee() != 0L) {
          setFee(other.getFee());
        }
        if (other.getChange() != 0L) {
          setChange(other.getChange());
        }
        if (utxosBuilder_ == null) {
          if (!other.utxos_.isEmpty()) {
            if (utxos_.isEmpty()) {
              utxos_ = other.utxos_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureUtxosIsMutable();
              utxos_.addAll(other.utxos_);
            }
            onChanged();
          }
        } else {
          if (!other.utxos_.isEmpty()) {
            if (utxosBuilder_.isEmpty()) {
              utxosBuilder_.dispose();
              utxosBuilder_ = null;
              utxos_ = other.utxos_;
              bitField0_ = (bitField0_ & ~0x00000010);
              utxosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUtxosFieldBuilder() : null;
            } else {
              utxosBuilder_.addAllMessages(other.utxos_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.TransactionPlan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.TransactionPlan) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long amount_ ;
      /**
       * <pre>
       *&#47; Amount to be received at the other end.
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       *&#47; Amount to be received at the other end.
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Amount to be received at the other end.
       * </pre>
       *
       * <code>int64 amount = 1;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }

      private long availableAmount_ ;
      /**
       * <pre>
       *&#47; Maximum available amount.
       * </pre>
       *
       * <code>int64 available_amount = 2;</code>
       */
      public long getAvailableAmount() {
        return availableAmount_;
      }
      /**
       * <pre>
       *&#47; Maximum available amount.
       * </pre>
       *
       * <code>int64 available_amount = 2;</code>
       */
      public Builder setAvailableAmount(long value) {
        
        availableAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Maximum available amount.
       * </pre>
       *
       * <code>int64 available_amount = 2;</code>
       */
      public Builder clearAvailableAmount() {
        
        availableAmount_ = 0L;
        onChanged();
        return this;
      }

      private long fee_ ;
      /**
       * <pre>
       *&#47; Estimated transaction fee.
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       */
      public long getFee() {
        return fee_;
      }
      /**
       * <pre>
       *&#47; Estimated transaction fee.
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       */
      public Builder setFee(long value) {
        
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Estimated transaction fee.
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       */
      public Builder clearFee() {
        
        fee_ = 0L;
        onChanged();
        return this;
      }

      private long change_ ;
      /**
       * <pre>
       *&#47; Change.
       * </pre>
       *
       * <code>int64 change = 4;</code>
       */
      public long getChange() {
        return change_;
      }
      /**
       * <pre>
       *&#47; Change.
       * </pre>
       *
       * <code>int64 change = 4;</code>
       */
      public Builder setChange(long value) {
        
        change_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Change.
       * </pre>
       *
       * <code>int64 change = 4;</code>
       */
      public Builder clearChange() {
        
        change_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> utxos_ =
        java.util.Collections.emptyList();
      private void ensureUtxosIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          utxos_ = new java.util.ArrayList<wallet.core.jni.proto.Bitcoin.UnspentTransaction>(utxos_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.UnspentTransaction, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder, wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> utxosBuilder_;

      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction> getUtxosList() {
        if (utxosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(utxos_);
        } else {
          return utxosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public int getUtxosCount() {
        if (utxosBuilder_ == null) {
          return utxos_.size();
        } else {
          return utxosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction getUtxos(int index) {
        if (utxosBuilder_ == null) {
          return utxos_.get(index);
        } else {
          return utxosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder setUtxos(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction value) {
        if (utxosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtxosIsMutable();
          utxos_.set(index, value);
          onChanged();
        } else {
          utxosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder setUtxos(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder builderForValue) {
        if (utxosBuilder_ == null) {
          ensureUtxosIsMutable();
          utxos_.set(index, builderForValue.build());
          onChanged();
        } else {
          utxosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder addUtxos(wallet.core.jni.proto.Bitcoin.UnspentTransaction value) {
        if (utxosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtxosIsMutable();
          utxos_.add(value);
          onChanged();
        } else {
          utxosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder addUtxos(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction value) {
        if (utxosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUtxosIsMutable();
          utxos_.add(index, value);
          onChanged();
        } else {
          utxosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder addUtxos(
          wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder builderForValue) {
        if (utxosBuilder_ == null) {
          ensureUtxosIsMutable();
          utxos_.add(builderForValue.build());
          onChanged();
        } else {
          utxosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder addUtxos(
          int index, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder builderForValue) {
        if (utxosBuilder_ == null) {
          ensureUtxosIsMutable();
          utxos_.add(index, builderForValue.build());
          onChanged();
        } else {
          utxosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder addAllUtxos(
          java.lang.Iterable<? extends wallet.core.jni.proto.Bitcoin.UnspentTransaction> values) {
        if (utxosBuilder_ == null) {
          ensureUtxosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, utxos_);
          onChanged();
        } else {
          utxosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder clearUtxos() {
        if (utxosBuilder_ == null) {
          utxos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          utxosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public Builder removeUtxos(int index) {
        if (utxosBuilder_ == null) {
          ensureUtxosIsMutable();
          utxos_.remove(index);
          onChanged();
        } else {
          utxosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder getUtxosBuilder(
          int index) {
        return getUtxosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder getUtxosOrBuilder(
          int index) {
        if (utxosBuilder_ == null) {
          return utxos_.get(index);  } else {
          return utxosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
           getUtxosOrBuilderList() {
        if (utxosBuilder_ != null) {
          return utxosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(utxos_);
        }
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder addUtxosBuilder() {
        return getUtxosFieldBuilder().addBuilder(
            wallet.core.jni.proto.Bitcoin.UnspentTransaction.getDefaultInstance());
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder addUtxosBuilder(
          int index) {
        return getUtxosFieldBuilder().addBuilder(
            index, wallet.core.jni.proto.Bitcoin.UnspentTransaction.getDefaultInstance());
      }
      /**
       * <pre>
       *&#47; Selected unspent transaction outputs.
       * </pre>
       *
       * <code>repeated .TW.Bitcoin.Proto.UnspentTransaction utxos = 5;</code>
       */
      public java.util.List<wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder> 
           getUtxosBuilderList() {
        return getUtxosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.UnspentTransaction, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder, wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder> 
          getUtxosFieldBuilder() {
        if (utxosBuilder_ == null) {
          utxosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.UnspentTransaction, wallet.core.jni.proto.Bitcoin.UnspentTransaction.Builder, wallet.core.jni.proto.Bitcoin.UnspentTransactionOrBuilder>(
                  utxos_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          utxos_ = null;
        }
        return utxosBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.TransactionPlan)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.TransactionPlan)
    private static final wallet.core.jni.proto.Bitcoin.TransactionPlan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.TransactionPlan();
    }

    public static wallet.core.jni.proto.Bitcoin.TransactionPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransactionPlan>
        PARSER = new com.google.protobuf.AbstractParser<TransactionPlan>() {
      @java.lang.Override
      public TransactionPlan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransactionPlan(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionPlan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionPlan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.TransactionPlan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.Bitcoin.Proto.SigningOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
     */
    boolean hasTransaction();
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
     */
    wallet.core.jni.proto.Bitcoin.Transaction getTransaction();
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
     */
    wallet.core.jni.proto.Bitcoin.TransactionOrBuilder getTransactionOrBuilder();

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 2;</code>
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * Total transaction fees.
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     */
    long getFee();

    /**
     * <pre>
     * Maximum spendable amount.
     * </pre>
     *
     * <code>int64 max_amount = 4;</code>
     */
    long getMaxAmount();

    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 5;</code>
     */
    java.lang.String getTransactionId();
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 5;</code>
     */
    com.google.protobuf.ByteString
        getTransactionIdBytes();
  }
  /**
   * <pre>
   * Transaction signing output.
   * </pre>
   *
   * Protobuf type {@code TW.Bitcoin.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.Bitcoin.Proto.SigningOutput)
      SigningOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SigningOutput.newBuilder() to construct.
    private SigningOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      transactionId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SigningOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              wallet.core.jni.proto.Bitcoin.Transaction.Builder subBuilder = null;
              if (transaction_ != null) {
                subBuilder = transaction_.toBuilder();
              }
              transaction_ = input.readMessage(wallet.core.jni.proto.Bitcoin.Transaction.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transaction_);
                transaction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              encoded_ = input.readBytes();
              break;
            }
            case 24: {

              fee_ = input.readInt64();
              break;
            }
            case 32: {

              maxAmount_ = input.readInt64();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              transactionId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.Bitcoin.SigningOutput.class, wallet.core.jni.proto.Bitcoin.SigningOutput.Builder.class);
    }

    public static final int TRANSACTION_FIELD_NUMBER = 1;
    private wallet.core.jni.proto.Bitcoin.Transaction transaction_;
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
     */
    public boolean hasTransaction() {
      return transaction_ != null;
    }
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
     */
    public wallet.core.jni.proto.Bitcoin.Transaction getTransaction() {
      return transaction_ == null ? wallet.core.jni.proto.Bitcoin.Transaction.getDefaultInstance() : transaction_;
    }
    /**
     * <pre>
     * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
     * </pre>
     *
     * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
     */
    public wallet.core.jni.proto.Bitcoin.TransactionOrBuilder getTransactionOrBuilder() {
      return getTransaction();
    }

    public static final int ENCODED_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 2;</code>
     */
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }

    public static final int FEE_FIELD_NUMBER = 3;
    private long fee_;
    /**
     * <pre>
     * Total transaction fees.
     * </pre>
     *
     * <code>int64 fee = 3;</code>
     */
    public long getFee() {
      return fee_;
    }

    public static final int MAX_AMOUNT_FIELD_NUMBER = 4;
    private long maxAmount_;
    /**
     * <pre>
     * Maximum spendable amount.
     * </pre>
     *
     * <code>int64 max_amount = 4;</code>
     */
    public long getMaxAmount() {
      return maxAmount_;
    }

    public static final int TRANSACTION_ID_FIELD_NUMBER = 5;
    private volatile java.lang.Object transactionId_;
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 5;</code>
     */
    public java.lang.String getTransactionId() {
      java.lang.Object ref = transactionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transactionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Transaction id
     * </pre>
     *
     * <code>string transaction_id = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTransactionIdBytes() {
      java.lang.Object ref = transactionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transactionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (transaction_ != null) {
        output.writeMessage(1, getTransaction());
      }
      if (!encoded_.isEmpty()) {
        output.writeBytes(2, encoded_);
      }
      if (fee_ != 0L) {
        output.writeInt64(3, fee_);
      }
      if (maxAmount_ != 0L) {
        output.writeInt64(4, maxAmount_);
      }
      if (!getTransactionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, transactionId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (transaction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTransaction());
      }
      if (!encoded_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, encoded_);
      }
      if (fee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, fee_);
      }
      if (maxAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, maxAmount_);
      }
      if (!getTransactionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, transactionId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.Bitcoin.SigningOutput)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.Bitcoin.SigningOutput other = (wallet.core.jni.proto.Bitcoin.SigningOutput) obj;

      if (hasTransaction() != other.hasTransaction()) return false;
      if (hasTransaction()) {
        if (!getTransaction()
            .equals(other.getTransaction())) return false;
      }
      if (!getEncoded()
          .equals(other.getEncoded())) return false;
      if (getFee()
          != other.getFee()) return false;
      if (getMaxAmount()
          != other.getMaxAmount()) return false;
      if (!getTransactionId()
          .equals(other.getTransactionId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTransaction()) {
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransaction().hashCode();
      }
      hash = (37 * hash) + ENCODED_FIELD_NUMBER;
      hash = (53 * hash) + getEncoded().hashCode();
      hash = (37 * hash) + FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFee());
      hash = (37 * hash) + MAX_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxAmount());
      hash = (37 * hash) + TRANSACTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.Bitcoin.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.Bitcoin.SigningOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Transaction signing output.
     * </pre>
     *
     * Protobuf type {@code TW.Bitcoin.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.Bitcoin.Proto.SigningOutput)
        wallet.core.jni.proto.Bitcoin.SigningOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.Bitcoin.SigningOutput.class, wallet.core.jni.proto.Bitcoin.SigningOutput.Builder.class);
      }

      // Construct using wallet.core.jni.proto.Bitcoin.SigningOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (transactionBuilder_ == null) {
          transaction_ = null;
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }
        encoded_ = com.google.protobuf.ByteString.EMPTY;

        fee_ = 0L;

        maxAmount_ = 0L;

        transactionId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.Bitcoin.internal_static_TW_Bitcoin_Proto_SigningOutput_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningOutput getDefaultInstanceForType() {
        return wallet.core.jni.proto.Bitcoin.SigningOutput.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningOutput build() {
        wallet.core.jni.proto.Bitcoin.SigningOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.Bitcoin.SigningOutput buildPartial() {
        wallet.core.jni.proto.Bitcoin.SigningOutput result = new wallet.core.jni.proto.Bitcoin.SigningOutput(this);
        if (transactionBuilder_ == null) {
          result.transaction_ = transaction_;
        } else {
          result.transaction_ = transactionBuilder_.build();
        }
        result.encoded_ = encoded_;
        result.fee_ = fee_;
        result.maxAmount_ = maxAmount_;
        result.transactionId_ = transactionId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.Bitcoin.SigningOutput) {
          return mergeFrom((wallet.core.jni.proto.Bitcoin.SigningOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.Bitcoin.SigningOutput other) {
        if (other == wallet.core.jni.proto.Bitcoin.SigningOutput.getDefaultInstance()) return this;
        if (other.hasTransaction()) {
          mergeTransaction(other.getTransaction());
        }
        if (other.getEncoded() != com.google.protobuf.ByteString.EMPTY) {
          setEncoded(other.getEncoded());
        }
        if (other.getFee() != 0L) {
          setFee(other.getFee());
        }
        if (other.getMaxAmount() != 0L) {
          setMaxAmount(other.getMaxAmount());
        }
        if (!other.getTransactionId().isEmpty()) {
          transactionId_ = other.transactionId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.Bitcoin.SigningOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.Bitcoin.SigningOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private wallet.core.jni.proto.Bitcoin.Transaction transaction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.Transaction, wallet.core.jni.proto.Bitcoin.Transaction.Builder, wallet.core.jni.proto.Bitcoin.TransactionOrBuilder> transactionBuilder_;
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public boolean hasTransaction() {
        return transactionBuilder_ != null || transaction_ != null;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.Transaction getTransaction() {
        if (transactionBuilder_ == null) {
          return transaction_ == null ? wallet.core.jni.proto.Bitcoin.Transaction.getDefaultInstance() : transaction_;
        } else {
          return transactionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(wallet.core.jni.proto.Bitcoin.Transaction value) {
        if (transactionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transaction_ = value;
          onChanged();
        } else {
          transactionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public Builder setTransaction(
          wallet.core.jni.proto.Bitcoin.Transaction.Builder builderForValue) {
        if (transactionBuilder_ == null) {
          transaction_ = builderForValue.build();
          onChanged();
        } else {
          transactionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public Builder mergeTransaction(wallet.core.jni.proto.Bitcoin.Transaction value) {
        if (transactionBuilder_ == null) {
          if (transaction_ != null) {
            transaction_ =
              wallet.core.jni.proto.Bitcoin.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
          } else {
            transaction_ = value;
          }
          onChanged();
        } else {
          transactionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public Builder clearTransaction() {
        if (transactionBuilder_ == null) {
          transaction_ = null;
          onChanged();
        } else {
          transaction_ = null;
          transactionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.Transaction.Builder getTransactionBuilder() {
        
        onChanged();
        return getTransactionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      public wallet.core.jni.proto.Bitcoin.TransactionOrBuilder getTransactionOrBuilder() {
        if (transactionBuilder_ != null) {
          return transactionBuilder_.getMessageOrBuilder();
        } else {
          return transaction_ == null ?
              wallet.core.jni.proto.Bitcoin.Transaction.getDefaultInstance() : transaction_;
        }
      }
      /**
       * <pre>
       * Resulting transaction. Note that the amount may be different than the requested amount to account for fees and available funds.
       * </pre>
       *
       * <code>.TW.Bitcoin.Proto.Transaction transaction = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          wallet.core.jni.proto.Bitcoin.Transaction, wallet.core.jni.proto.Bitcoin.Transaction.Builder, wallet.core.jni.proto.Bitcoin.TransactionOrBuilder> 
          getTransactionFieldBuilder() {
        if (transactionBuilder_ == null) {
          transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              wallet.core.jni.proto.Bitcoin.Transaction, wallet.core.jni.proto.Bitcoin.Transaction.Builder, wallet.core.jni.proto.Bitcoin.TransactionOrBuilder>(
                  getTransaction(),
                  getParentForChildren(),
                  isClean());
          transaction_ = null;
        }
        return transactionBuilder_;
      }

      private com.google.protobuf.ByteString encoded_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 2;</code>
       */
      public com.google.protobuf.ByteString getEncoded() {
        return encoded_;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 2;</code>
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encoded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 2;</code>
       */
      public Builder clearEncoded() {
        
        encoded_ = getDefaultInstance().getEncoded();
        onChanged();
        return this;
      }

      private long fee_ ;
      /**
       * <pre>
       * Total transaction fees.
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       */
      public long getFee() {
        return fee_;
      }
      /**
       * <pre>
       * Total transaction fees.
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       */
      public Builder setFee(long value) {
        
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total transaction fees.
       * </pre>
       *
       * <code>int64 fee = 3;</code>
       */
      public Builder clearFee() {
        
        fee_ = 0L;
        onChanged();
        return this;
      }

      private long maxAmount_ ;
      /**
       * <pre>
       * Maximum spendable amount.
       * </pre>
       *
       * <code>int64 max_amount = 4;</code>
       */
      public long getMaxAmount() {
        return maxAmount_;
      }
      /**
       * <pre>
       * Maximum spendable amount.
       * </pre>
       *
       * <code>int64 max_amount = 4;</code>
       */
      public Builder setMaxAmount(long value) {
        
        maxAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum spendable amount.
       * </pre>
       *
       * <code>int64 max_amount = 4;</code>
       */
      public Builder clearMaxAmount() {
        
        maxAmount_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object transactionId_ = "";
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 5;</code>
       */
      public java.lang.String getTransactionId() {
        java.lang.Object ref = transactionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transactionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTransactionIdBytes() {
        java.lang.Object ref = transactionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transactionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 5;</code>
       */
      public Builder setTransactionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        transactionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 5;</code>
       */
      public Builder clearTransactionId() {
        
        transactionId_ = getDefaultInstance().getTransactionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transaction id
       * </pre>
       *
       * <code>string transaction_id = 5;</code>
       */
      public Builder setTransactionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        transactionId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.Bitcoin.Proto.SigningOutput)
    }

    // @@protoc_insertion_point(class_scope:TW.Bitcoin.Proto.SigningOutput)
    private static final wallet.core.jni.proto.Bitcoin.SigningOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.Bitcoin.SigningOutput();
    }

    public static wallet.core.jni.proto.Bitcoin.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SigningOutput>
        PARSER = new com.google.protobuf.AbstractParser<SigningOutput>() {
      @java.lang.Override
      public SigningOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SigningOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SigningOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.Bitcoin.SigningOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_Transaction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_Transaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_TransactionInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_TransactionInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_OutPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_OutPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_TransactionOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_TransactionOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_UnspentTransaction_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_UnspentTransaction_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_SigningInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_SigningInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_SigningInput_ScriptsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_SigningInput_ScriptsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_TransactionPlan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_TransactionPlan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_Bitcoin_Proto_SigningOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_Bitcoin_Proto_SigningOutput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rBitcoin.proto\022\020TW.Bitcoin.Proto\"\232\001\n\013Tr" +
      "ansaction\022\017\n\007version\030\001 \001(\021\022\020\n\010lockTime\030\002" +
      " \001(\r\0222\n\006inputs\030\003 \003(\0132\".TW.Bitcoin.Proto." +
      "TransactionInput\0224\n\007outputs\030\004 \003(\0132#.TW.B" +
      "itcoin.Proto.TransactionOutput\"h\n\020Transa" +
      "ctionInput\0222\n\016previousOutput\030\001 \001(\0132\032.TW." +
      "Bitcoin.Proto.OutPoint\022\020\n\010sequence\030\002 \001(\r" +
      "\022\016\n\006script\030\003 \001(\014\"9\n\010OutPoint\022\014\n\004hash\030\001 \001" +
      "(\014\022\r\n\005index\030\002 \001(\r\022\020\n\010sequence\030\003 \001(\r\"2\n\021T" +
      "ransactionOutput\022\r\n\005value\030\001 \001(\003\022\016\n\006scrip" +
      "t\030\002 \001(\014\"c\n\022UnspentTransaction\022-\n\tout_poi" +
      "nt\030\001 \001(\0132\032.TW.Bitcoin.Proto.OutPoint\022\016\n\006" +
      "script\030\002 \001(\014\022\016\n\006amount\030\003 \001(\003\"\321\002\n\014Signing" +
      "Input\022\021\n\thash_type\030\001 \001(\r\022\016\n\006amount\030\002 \001(\003" +
      "\022\020\n\010byte_fee\030\003 \001(\003\022\022\n\nto_address\030\004 \001(\t\022\026" +
      "\n\016change_address\030\005 \001(\t\022\023\n\013private_key\030\n " +
      "\003(\014\022<\n\007scripts\030\013 \003(\0132+.TW.Bitcoin.Proto." +
      "SigningInput.ScriptsEntry\0222\n\004utxo\030\014 \003(\0132" +
      "$.TW.Bitcoin.Proto.UnspentTransaction\022\026\n" +
      "\016use_max_amount\030\r \001(\010\022\021\n\tcoin_type\030\016 \001(\r" +
      "\032.\n\014ScriptsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002" +
      " \001(\014:\0028\001\"\215\001\n\017TransactionPlan\022\016\n\006amount\030\001" +
      " \001(\003\022\030\n\020available_amount\030\002 \001(\003\022\013\n\003fee\030\003 " +
      "\001(\003\022\016\n\006change\030\004 \001(\003\0223\n\005utxos\030\005 \003(\0132$.TW." +
      "Bitcoin.Proto.UnspentTransaction\"\215\001\n\rSig" +
      "ningOutput\0222\n\013transaction\030\001 \001(\0132\035.TW.Bit" +
      "coin.Proto.Transaction\022\017\n\007encoded\030\002 \001(\014\022" +
      "\013\n\003fee\030\003 \001(\003\022\022\n\nmax_amount\030\004 \001(\003\022\026\n\016tran" +
      "saction_id\030\005 \001(\tB\027\n\025wallet.core.jni.prot" +
      "ob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_TW_Bitcoin_Proto_Transaction_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TW_Bitcoin_Proto_Transaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_Transaction_descriptor,
        new java.lang.String[] { "Version", "LockTime", "Inputs", "Outputs", });
    internal_static_TW_Bitcoin_Proto_TransactionInput_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TW_Bitcoin_Proto_TransactionInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_TransactionInput_descriptor,
        new java.lang.String[] { "PreviousOutput", "Sequence", "Script", });
    internal_static_TW_Bitcoin_Proto_OutPoint_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TW_Bitcoin_Proto_OutPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_OutPoint_descriptor,
        new java.lang.String[] { "Hash", "Index", "Sequence", });
    internal_static_TW_Bitcoin_Proto_TransactionOutput_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TW_Bitcoin_Proto_TransactionOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_TransactionOutput_descriptor,
        new java.lang.String[] { "Value", "Script", });
    internal_static_TW_Bitcoin_Proto_UnspentTransaction_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TW_Bitcoin_Proto_UnspentTransaction_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_UnspentTransaction_descriptor,
        new java.lang.String[] { "OutPoint", "Script", "Amount", });
    internal_static_TW_Bitcoin_Proto_SigningInput_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_TW_Bitcoin_Proto_SigningInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_SigningInput_descriptor,
        new java.lang.String[] { "HashType", "Amount", "ByteFee", "ToAddress", "ChangeAddress", "PrivateKey", "Scripts", "Utxo", "UseMaxAmount", "CoinType", });
    internal_static_TW_Bitcoin_Proto_SigningInput_ScriptsEntry_descriptor =
      internal_static_TW_Bitcoin_Proto_SigningInput_descriptor.getNestedTypes().get(0);
    internal_static_TW_Bitcoin_Proto_SigningInput_ScriptsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_SigningInput_ScriptsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TW_Bitcoin_Proto_TransactionPlan_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TW_Bitcoin_Proto_TransactionPlan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_TransactionPlan_descriptor,
        new java.lang.String[] { "Amount", "AvailableAmount", "Fee", "Change", "Utxos", });
    internal_static_TW_Bitcoin_Proto_SigningOutput_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_TW_Bitcoin_Proto_SigningOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_Bitcoin_Proto_SigningOutput_descriptor,
        new java.lang.String[] { "Transaction", "Encoded", "Fee", "MaxAmount", "TransactionId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
