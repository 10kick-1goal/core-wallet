// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VeChain.proto

package wallet.core.jni.proto;

public final class VeChain {
  private VeChain() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClauseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.VeChain.Proto.Clause)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     */
    java.lang.String getTo();
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <pre>
     *&#47; Transaction amount.
     * </pre>
     *
     * <code>bytes value = 2;</code>
     */
    com.google.protobuf.ByteString getValue();

    /**
     * <pre>
     *&#47; Payload data.
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code TW.VeChain.Proto.Clause}
   */
  public  static final class Clause extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.VeChain.Proto.Clause)
      ClauseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Clause.newBuilder() to construct.
    private Clause(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Clause() {
      to_ = "";
      value_ = com.google.protobuf.ByteString.EMPTY;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Clause(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              to_ = s;
              break;
            }
            case 18: {

              value_ = input.readBytes();
              break;
            }
            case 26: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_Clause_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_Clause_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.VeChain.Clause.class, wallet.core.jni.proto.VeChain.Clause.Builder.class);
    }

    public static final int TO_FIELD_NUMBER = 1;
    private volatile java.lang.Object to_;
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     */
    public java.lang.String getTo() {
      java.lang.Object ref = to_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        to_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *&#47; Recipient address.
     * </pre>
     *
     * <code>string to = 1;</code>
     */
    public com.google.protobuf.ByteString
        getToBytes() {
      java.lang.Object ref = to_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString value_;
    /**
     * <pre>
     *&#47; Transaction amount.
     * </pre>
     *
     * <code>bytes value = 2;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     *&#47; Payload data.
     * </pre>
     *
     * <code>bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, to_);
      }
      if (!value_.isEmpty()) {
        output.writeBytes(2, value_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, to_);
      }
      if (!value_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, value_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.VeChain.Clause)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.VeChain.Clause other = (wallet.core.jni.proto.VeChain.Clause) obj;

      boolean result = true;
      result = result && getTo()
          .equals(other.getTo());
      result = result && getValue()
          .equals(other.getValue());
      result = result && getData()
          .equals(other.getData());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.Clause parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.VeChain.Clause prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TW.VeChain.Proto.Clause}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.VeChain.Proto.Clause)
        wallet.core.jni.proto.VeChain.ClauseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_Clause_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_Clause_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.VeChain.Clause.class, wallet.core.jni.proto.VeChain.Clause.Builder.class);
      }

      // Construct using wallet.core.jni.proto.VeChain.Clause.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        to_ = "";

        value_ = com.google.protobuf.ByteString.EMPTY;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_Clause_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.Clause getDefaultInstanceForType() {
        return wallet.core.jni.proto.VeChain.Clause.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.Clause build() {
        wallet.core.jni.proto.VeChain.Clause result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.Clause buildPartial() {
        wallet.core.jni.proto.VeChain.Clause result = new wallet.core.jni.proto.VeChain.Clause(this);
        result.to_ = to_;
        result.value_ = value_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.VeChain.Clause) {
          return mergeFrom((wallet.core.jni.proto.VeChain.Clause)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.VeChain.Clause other) {
        if (other == wallet.core.jni.proto.VeChain.Clause.getDefaultInstance()) return this;
        if (!other.getTo().isEmpty()) {
          to_ = other.to_;
          onChanged();
        }
        if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
          setValue(other.getValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.VeChain.Clause parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.VeChain.Clause) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object to_ = "";
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       */
      public java.lang.String getTo() {
        java.lang.Object ref = to_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       */
      public com.google.protobuf.ByteString
          getToBytes() {
        java.lang.Object ref = to_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       */
      public Builder setTo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Recipient address.
       * </pre>
       *
       * <code>string to = 1;</code>
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        to_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *&#47; Transaction amount.
       * </pre>
       *
       * <code>bytes value = 2;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <pre>
       *&#47; Transaction amount.
       * </pre>
       *
       * <code>bytes value = 2;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Transaction amount.
       * </pre>
       *
       * <code>bytes value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *&#47; Payload data.
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       *&#47; Payload data.
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Payload data.
       * </pre>
       *
       * <code>bytes data = 3;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.VeChain.Proto.Clause)
    }

    // @@protoc_insertion_point(class_scope:TW.VeChain.Proto.Clause)
    private static final wallet.core.jni.proto.VeChain.Clause DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.VeChain.Clause();
    }

    public static wallet.core.jni.proto.VeChain.Clause getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Clause>
        PARSER = new com.google.protobuf.AbstractParser<Clause>() {
      @java.lang.Override
      public Clause parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Clause(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Clause> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Clause> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.VeChain.Clause getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SigningInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.VeChain.Proto.SigningInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
     * </pre>
     *
     * <code>uint32 chain_tag = 1;</code>
     */
    int getChainTag();

    /**
     * <pre>
     *&#47; Reference to a specific block.
     * </pre>
     *
     * <code>uint64 block_ref = 2;</code>
     */
    long getBlockRef();

    /**
     * <pre>
     *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
     * </pre>
     *
     * <code>uint32 expiration = 3;</code>
     */
    int getExpiration();

    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    java.util.List<wallet.core.jni.proto.VeChain.Clause> 
        getClausesList();
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    wallet.core.jni.proto.VeChain.Clause getClauses(int index);
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    int getClausesCount();
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    java.util.List<? extends wallet.core.jni.proto.VeChain.ClauseOrBuilder> 
        getClausesOrBuilderList();
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    wallet.core.jni.proto.VeChain.ClauseOrBuilder getClausesOrBuilder(
        int index);

    /**
     * <pre>
     *&#47; Coefficient used to calculate the gas price for the transaction.
     * </pre>
     *
     * <code>uint32 gas_price_coef = 5;</code>
     */
    int getGasPriceCoef();

    /**
     * <pre>
     *&#47; Maximum amount of gas allowed to pay for the transaction.
     * </pre>
     *
     * <code>uint64 gas = 6;</code>
     */
    long getGas();

    /**
     * <pre>
     *&#47; ID of the transaction on which the current transaction depends.
     * </pre>
     *
     * <code>bytes depends_on = 7;</code>
     */
    com.google.protobuf.ByteString getDependsOn();

    /**
     * <pre>
     *&#47; Number set by user.
     * </pre>
     *
     * <code>uint64 nonce = 8;</code>
     */
    long getNonce();

    /**
     * <pre>
     * Private key.
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     */
    com.google.protobuf.ByteString getPrivateKey();
  }
  /**
   * <pre>
   * Input data necessary to create a signed transaction.
   * </pre>
   *
   * Protobuf type {@code TW.VeChain.Proto.SigningInput}
   */
  public  static final class SigningInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.VeChain.Proto.SigningInput)
      SigningInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SigningInput.newBuilder() to construct.
    private SigningInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SigningInput() {
      chainTag_ = 0;
      blockRef_ = 0L;
      expiration_ = 0;
      clauses_ = java.util.Collections.emptyList();
      gasPriceCoef_ = 0;
      gas_ = 0L;
      dependsOn_ = com.google.protobuf.ByteString.EMPTY;
      nonce_ = 0L;
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SigningInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              chainTag_ = input.readUInt32();
              break;
            }
            case 16: {

              blockRef_ = input.readUInt64();
              break;
            }
            case 24: {

              expiration_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                clauses_ = new java.util.ArrayList<wallet.core.jni.proto.VeChain.Clause>();
                mutable_bitField0_ |= 0x00000008;
              }
              clauses_.add(
                  input.readMessage(wallet.core.jni.proto.VeChain.Clause.parser(), extensionRegistry));
              break;
            }
            case 40: {

              gasPriceCoef_ = input.readUInt32();
              break;
            }
            case 48: {

              gas_ = input.readUInt64();
              break;
            }
            case 58: {

              dependsOn_ = input.readBytes();
              break;
            }
            case 64: {

              nonce_ = input.readUInt64();
              break;
            }
            case 74: {

              privateKey_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          clauses_ = java.util.Collections.unmodifiableList(clauses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.VeChain.SigningInput.class, wallet.core.jni.proto.VeChain.SigningInput.Builder.class);
    }

    private int bitField0_;
    public static final int CHAIN_TAG_FIELD_NUMBER = 1;
    private int chainTag_;
    /**
     * <pre>
     *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
     * </pre>
     *
     * <code>uint32 chain_tag = 1;</code>
     */
    public int getChainTag() {
      return chainTag_;
    }

    public static final int BLOCK_REF_FIELD_NUMBER = 2;
    private long blockRef_;
    /**
     * <pre>
     *&#47; Reference to a specific block.
     * </pre>
     *
     * <code>uint64 block_ref = 2;</code>
     */
    public long getBlockRef() {
      return blockRef_;
    }

    public static final int EXPIRATION_FIELD_NUMBER = 3;
    private int expiration_;
    /**
     * <pre>
     *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
     * </pre>
     *
     * <code>uint32 expiration = 3;</code>
     */
    public int getExpiration() {
      return expiration_;
    }

    public static final int CLAUSES_FIELD_NUMBER = 4;
    private java.util.List<wallet.core.jni.proto.VeChain.Clause> clauses_;
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public java.util.List<wallet.core.jni.proto.VeChain.Clause> getClausesList() {
      return clauses_;
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public java.util.List<? extends wallet.core.jni.proto.VeChain.ClauseOrBuilder> 
        getClausesOrBuilderList() {
      return clauses_;
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public int getClausesCount() {
      return clauses_.size();
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public wallet.core.jni.proto.VeChain.Clause getClauses(int index) {
      return clauses_.get(index);
    }
    /**
     * <pre>
     *&#47; An array of Clause objects.
     * /
     * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
     * / by the transaction sender.
     * </pre>
     *
     * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
     */
    public wallet.core.jni.proto.VeChain.ClauseOrBuilder getClausesOrBuilder(
        int index) {
      return clauses_.get(index);
    }

    public static final int GAS_PRICE_COEF_FIELD_NUMBER = 5;
    private int gasPriceCoef_;
    /**
     * <pre>
     *&#47; Coefficient used to calculate the gas price for the transaction.
     * </pre>
     *
     * <code>uint32 gas_price_coef = 5;</code>
     */
    public int getGasPriceCoef() {
      return gasPriceCoef_;
    }

    public static final int GAS_FIELD_NUMBER = 6;
    private long gas_;
    /**
     * <pre>
     *&#47; Maximum amount of gas allowed to pay for the transaction.
     * </pre>
     *
     * <code>uint64 gas = 6;</code>
     */
    public long getGas() {
      return gas_;
    }

    public static final int DEPENDS_ON_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString dependsOn_;
    /**
     * <pre>
     *&#47; ID of the transaction on which the current transaction depends.
     * </pre>
     *
     * <code>bytes depends_on = 7;</code>
     */
    public com.google.protobuf.ByteString getDependsOn() {
      return dependsOn_;
    }

    public static final int NONCE_FIELD_NUMBER = 8;
    private long nonce_;
    /**
     * <pre>
     *&#47; Number set by user.
     * </pre>
     *
     * <code>uint64 nonce = 8;</code>
     */
    public long getNonce() {
      return nonce_;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <pre>
     * Private key.
     * </pre>
     *
     * <code>bytes private_key = 9;</code>
     */
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chainTag_ != 0) {
        output.writeUInt32(1, chainTag_);
      }
      if (blockRef_ != 0L) {
        output.writeUInt64(2, blockRef_);
      }
      if (expiration_ != 0) {
        output.writeUInt32(3, expiration_);
      }
      for (int i = 0; i < clauses_.size(); i++) {
        output.writeMessage(4, clauses_.get(i));
      }
      if (gasPriceCoef_ != 0) {
        output.writeUInt32(5, gasPriceCoef_);
      }
      if (gas_ != 0L) {
        output.writeUInt64(6, gas_);
      }
      if (!dependsOn_.isEmpty()) {
        output.writeBytes(7, dependsOn_);
      }
      if (nonce_ != 0L) {
        output.writeUInt64(8, nonce_);
      }
      if (!privateKey_.isEmpty()) {
        output.writeBytes(9, privateKey_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chainTag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, chainTag_);
      }
      if (blockRef_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, blockRef_);
      }
      if (expiration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, expiration_);
      }
      for (int i = 0; i < clauses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, clauses_.get(i));
      }
      if (gasPriceCoef_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, gasPriceCoef_);
      }
      if (gas_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, gas_);
      }
      if (!dependsOn_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, dependsOn_);
      }
      if (nonce_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, nonce_);
      }
      if (!privateKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, privateKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.VeChain.SigningInput)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.VeChain.SigningInput other = (wallet.core.jni.proto.VeChain.SigningInput) obj;

      boolean result = true;
      result = result && (getChainTag()
          == other.getChainTag());
      result = result && (getBlockRef()
          == other.getBlockRef());
      result = result && (getExpiration()
          == other.getExpiration());
      result = result && getClausesList()
          .equals(other.getClausesList());
      result = result && (getGasPriceCoef()
          == other.getGasPriceCoef());
      result = result && (getGas()
          == other.getGas());
      result = result && getDependsOn()
          .equals(other.getDependsOn());
      result = result && (getNonce()
          == other.getNonce());
      result = result && getPrivateKey()
          .equals(other.getPrivateKey());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHAIN_TAG_FIELD_NUMBER;
      hash = (53 * hash) + getChainTag();
      hash = (37 * hash) + BLOCK_REF_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlockRef());
      hash = (37 * hash) + EXPIRATION_FIELD_NUMBER;
      hash = (53 * hash) + getExpiration();
      if (getClausesCount() > 0) {
        hash = (37 * hash) + CLAUSES_FIELD_NUMBER;
        hash = (53 * hash) + getClausesList().hashCode();
      }
      hash = (37 * hash) + GAS_PRICE_COEF_FIELD_NUMBER;
      hash = (53 * hash) + getGasPriceCoef();
      hash = (37 * hash) + GAS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGas());
      hash = (37 * hash) + DEPENDS_ON_FIELD_NUMBER;
      hash = (53 * hash) + getDependsOn().hashCode();
      hash = (37 * hash) + NONCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNonce());
      hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.VeChain.SigningInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Input data necessary to create a signed transaction.
     * </pre>
     *
     * Protobuf type {@code TW.VeChain.Proto.SigningInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.VeChain.Proto.SigningInput)
        wallet.core.jni.proto.VeChain.SigningInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.VeChain.SigningInput.class, wallet.core.jni.proto.VeChain.SigningInput.Builder.class);
      }

      // Construct using wallet.core.jni.proto.VeChain.SigningInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getClausesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        chainTag_ = 0;

        blockRef_ = 0L;

        expiration_ = 0;

        if (clausesBuilder_ == null) {
          clauses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          clausesBuilder_.clear();
        }
        gasPriceCoef_ = 0;

        gas_ = 0L;

        dependsOn_ = com.google.protobuf.ByteString.EMPTY;

        nonce_ = 0L;

        privateKey_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningInput_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.SigningInput getDefaultInstanceForType() {
        return wallet.core.jni.proto.VeChain.SigningInput.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.SigningInput build() {
        wallet.core.jni.proto.VeChain.SigningInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.SigningInput buildPartial() {
        wallet.core.jni.proto.VeChain.SigningInput result = new wallet.core.jni.proto.VeChain.SigningInput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.chainTag_ = chainTag_;
        result.blockRef_ = blockRef_;
        result.expiration_ = expiration_;
        if (clausesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            clauses_ = java.util.Collections.unmodifiableList(clauses_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.clauses_ = clauses_;
        } else {
          result.clauses_ = clausesBuilder_.build();
        }
        result.gasPriceCoef_ = gasPriceCoef_;
        result.gas_ = gas_;
        result.dependsOn_ = dependsOn_;
        result.nonce_ = nonce_;
        result.privateKey_ = privateKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.VeChain.SigningInput) {
          return mergeFrom((wallet.core.jni.proto.VeChain.SigningInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.VeChain.SigningInput other) {
        if (other == wallet.core.jni.proto.VeChain.SigningInput.getDefaultInstance()) return this;
        if (other.getChainTag() != 0) {
          setChainTag(other.getChainTag());
        }
        if (other.getBlockRef() != 0L) {
          setBlockRef(other.getBlockRef());
        }
        if (other.getExpiration() != 0) {
          setExpiration(other.getExpiration());
        }
        if (clausesBuilder_ == null) {
          if (!other.clauses_.isEmpty()) {
            if (clauses_.isEmpty()) {
              clauses_ = other.clauses_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureClausesIsMutable();
              clauses_.addAll(other.clauses_);
            }
            onChanged();
          }
        } else {
          if (!other.clauses_.isEmpty()) {
            if (clausesBuilder_.isEmpty()) {
              clausesBuilder_.dispose();
              clausesBuilder_ = null;
              clauses_ = other.clauses_;
              bitField0_ = (bitField0_ & ~0x00000008);
              clausesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getClausesFieldBuilder() : null;
            } else {
              clausesBuilder_.addAllMessages(other.clauses_);
            }
          }
        }
        if (other.getGasPriceCoef() != 0) {
          setGasPriceCoef(other.getGasPriceCoef());
        }
        if (other.getGas() != 0L) {
          setGas(other.getGas());
        }
        if (other.getDependsOn() != com.google.protobuf.ByteString.EMPTY) {
          setDependsOn(other.getDependsOn());
        }
        if (other.getNonce() != 0L) {
          setNonce(other.getNonce());
        }
        if (other.getPrivateKey() != com.google.protobuf.ByteString.EMPTY) {
          setPrivateKey(other.getPrivateKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.VeChain.SigningInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.VeChain.SigningInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chainTag_ ;
      /**
       * <pre>
       *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
       * </pre>
       *
       * <code>uint32 chain_tag = 1;</code>
       */
      public int getChainTag() {
        return chainTag_;
      }
      /**
       * <pre>
       *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
       * </pre>
       *
       * <code>uint32 chain_tag = 1;</code>
       */
      public Builder setChainTag(int value) {
        
        chainTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Last byte of the genesis block ID which is used to identify a blockchain to prevent the cross-chain replay attack.
       * </pre>
       *
       * <code>uint32 chain_tag = 1;</code>
       */
      public Builder clearChainTag() {
        
        chainTag_ = 0;
        onChanged();
        return this;
      }

      private long blockRef_ ;
      /**
       * <pre>
       *&#47; Reference to a specific block.
       * </pre>
       *
       * <code>uint64 block_ref = 2;</code>
       */
      public long getBlockRef() {
        return blockRef_;
      }
      /**
       * <pre>
       *&#47; Reference to a specific block.
       * </pre>
       *
       * <code>uint64 block_ref = 2;</code>
       */
      public Builder setBlockRef(long value) {
        
        blockRef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Reference to a specific block.
       * </pre>
       *
       * <code>uint64 block_ref = 2;</code>
       */
      public Builder clearBlockRef() {
        
        blockRef_ = 0L;
        onChanged();
        return this;
      }

      private int expiration_ ;
      /**
       * <pre>
       *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
       * </pre>
       *
       * <code>uint32 expiration = 3;</code>
       */
      public int getExpiration() {
        return expiration_;
      }
      /**
       * <pre>
       *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
       * </pre>
       *
       * <code>uint32 expiration = 3;</code>
       */
      public Builder setExpiration(int value) {
        
        expiration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; How long, in terms of the number of blocks, the transaction will be allowed to be mined in VeChainThor.
       * </pre>
       *
       * <code>uint32 expiration = 3;</code>
       */
      public Builder clearExpiration() {
        
        expiration_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<wallet.core.jni.proto.VeChain.Clause> clauses_ =
        java.util.Collections.emptyList();
      private void ensureClausesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          clauses_ = new java.util.ArrayList<wallet.core.jni.proto.VeChain.Clause>(clauses_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.VeChain.Clause, wallet.core.jni.proto.VeChain.Clause.Builder, wallet.core.jni.proto.VeChain.ClauseOrBuilder> clausesBuilder_;

      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public java.util.List<wallet.core.jni.proto.VeChain.Clause> getClausesList() {
        if (clausesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(clauses_);
        } else {
          return clausesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public int getClausesCount() {
        if (clausesBuilder_ == null) {
          return clauses_.size();
        } else {
          return clausesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public wallet.core.jni.proto.VeChain.Clause getClauses(int index) {
        if (clausesBuilder_ == null) {
          return clauses_.get(index);
        } else {
          return clausesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder setClauses(
          int index, wallet.core.jni.proto.VeChain.Clause value) {
        if (clausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClausesIsMutable();
          clauses_.set(index, value);
          onChanged();
        } else {
          clausesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder setClauses(
          int index, wallet.core.jni.proto.VeChain.Clause.Builder builderForValue) {
        if (clausesBuilder_ == null) {
          ensureClausesIsMutable();
          clauses_.set(index, builderForValue.build());
          onChanged();
        } else {
          clausesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(wallet.core.jni.proto.VeChain.Clause value) {
        if (clausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClausesIsMutable();
          clauses_.add(value);
          onChanged();
        } else {
          clausesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(
          int index, wallet.core.jni.proto.VeChain.Clause value) {
        if (clausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClausesIsMutable();
          clauses_.add(index, value);
          onChanged();
        } else {
          clausesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(
          wallet.core.jni.proto.VeChain.Clause.Builder builderForValue) {
        if (clausesBuilder_ == null) {
          ensureClausesIsMutable();
          clauses_.add(builderForValue.build());
          onChanged();
        } else {
          clausesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addClauses(
          int index, wallet.core.jni.proto.VeChain.Clause.Builder builderForValue) {
        if (clausesBuilder_ == null) {
          ensureClausesIsMutable();
          clauses_.add(index, builderForValue.build());
          onChanged();
        } else {
          clausesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder addAllClauses(
          java.lang.Iterable<? extends wallet.core.jni.proto.VeChain.Clause> values) {
        if (clausesBuilder_ == null) {
          ensureClausesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clauses_);
          onChanged();
        } else {
          clausesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder clearClauses() {
        if (clausesBuilder_ == null) {
          clauses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          clausesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public Builder removeClauses(int index) {
        if (clausesBuilder_ == null) {
          ensureClausesIsMutable();
          clauses_.remove(index);
          onChanged();
        } else {
          clausesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public wallet.core.jni.proto.VeChain.Clause.Builder getClausesBuilder(
          int index) {
        return getClausesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public wallet.core.jni.proto.VeChain.ClauseOrBuilder getClausesOrBuilder(
          int index) {
        if (clausesBuilder_ == null) {
          return clauses_.get(index);  } else {
          return clausesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public java.util.List<? extends wallet.core.jni.proto.VeChain.ClauseOrBuilder> 
           getClausesOrBuilderList() {
        if (clausesBuilder_ != null) {
          return clausesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(clauses_);
        }
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public wallet.core.jni.proto.VeChain.Clause.Builder addClausesBuilder() {
        return getClausesFieldBuilder().addBuilder(
            wallet.core.jni.proto.VeChain.Clause.getDefaultInstance());
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public wallet.core.jni.proto.VeChain.Clause.Builder addClausesBuilder(
          int index) {
        return getClausesFieldBuilder().addBuilder(
            index, wallet.core.jni.proto.VeChain.Clause.getDefaultInstance());
      }
      /**
       * <pre>
       *&#47; An array of Clause objects.
       * /
       * / Each clause contains fields To, Value and Data to enable a single transaction to carry multiple tasks issued
       * / by the transaction sender.
       * </pre>
       *
       * <code>repeated .TW.VeChain.Proto.Clause clauses = 4;</code>
       */
      public java.util.List<wallet.core.jni.proto.VeChain.Clause.Builder> 
           getClausesBuilderList() {
        return getClausesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          wallet.core.jni.proto.VeChain.Clause, wallet.core.jni.proto.VeChain.Clause.Builder, wallet.core.jni.proto.VeChain.ClauseOrBuilder> 
          getClausesFieldBuilder() {
        if (clausesBuilder_ == null) {
          clausesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              wallet.core.jni.proto.VeChain.Clause, wallet.core.jni.proto.VeChain.Clause.Builder, wallet.core.jni.proto.VeChain.ClauseOrBuilder>(
                  clauses_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          clauses_ = null;
        }
        return clausesBuilder_;
      }

      private int gasPriceCoef_ ;
      /**
       * <pre>
       *&#47; Coefficient used to calculate the gas price for the transaction.
       * </pre>
       *
       * <code>uint32 gas_price_coef = 5;</code>
       */
      public int getGasPriceCoef() {
        return gasPriceCoef_;
      }
      /**
       * <pre>
       *&#47; Coefficient used to calculate the gas price for the transaction.
       * </pre>
       *
       * <code>uint32 gas_price_coef = 5;</code>
       */
      public Builder setGasPriceCoef(int value) {
        
        gasPriceCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Coefficient used to calculate the gas price for the transaction.
       * </pre>
       *
       * <code>uint32 gas_price_coef = 5;</code>
       */
      public Builder clearGasPriceCoef() {
        
        gasPriceCoef_ = 0;
        onChanged();
        return this;
      }

      private long gas_ ;
      /**
       * <pre>
       *&#47; Maximum amount of gas allowed to pay for the transaction.
       * </pre>
       *
       * <code>uint64 gas = 6;</code>
       */
      public long getGas() {
        return gas_;
      }
      /**
       * <pre>
       *&#47; Maximum amount of gas allowed to pay for the transaction.
       * </pre>
       *
       * <code>uint64 gas = 6;</code>
       */
      public Builder setGas(long value) {
        
        gas_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Maximum amount of gas allowed to pay for the transaction.
       * </pre>
       *
       * <code>uint64 gas = 6;</code>
       */
      public Builder clearGas() {
        
        gas_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString dependsOn_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *&#47; ID of the transaction on which the current transaction depends.
       * </pre>
       *
       * <code>bytes depends_on = 7;</code>
       */
      public com.google.protobuf.ByteString getDependsOn() {
        return dependsOn_;
      }
      /**
       * <pre>
       *&#47; ID of the transaction on which the current transaction depends.
       * </pre>
       *
       * <code>bytes depends_on = 7;</code>
       */
      public Builder setDependsOn(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dependsOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; ID of the transaction on which the current transaction depends.
       * </pre>
       *
       * <code>bytes depends_on = 7;</code>
       */
      public Builder clearDependsOn() {
        
        dependsOn_ = getDefaultInstance().getDependsOn();
        onChanged();
        return this;
      }

      private long nonce_ ;
      /**
       * <pre>
       *&#47; Number set by user.
       * </pre>
       *
       * <code>uint64 nonce = 8;</code>
       */
      public long getNonce() {
        return nonce_;
      }
      /**
       * <pre>
       *&#47; Number set by user.
       * </pre>
       *
       * <code>uint64 nonce = 8;</code>
       */
      public Builder setNonce(long value) {
        
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&#47; Number set by user.
       * </pre>
       *
       * <code>uint64 nonce = 8;</code>
       */
      public Builder clearNonce() {
        
        nonce_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Private key.
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       */
      public com.google.protobuf.ByteString getPrivateKey() {
        return privateKey_;
      }
      /**
       * <pre>
       * Private key.
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        privateKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Private key.
       * </pre>
       *
       * <code>bytes private_key = 9;</code>
       */
      public Builder clearPrivateKey() {
        
        privateKey_ = getDefaultInstance().getPrivateKey();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.VeChain.Proto.SigningInput)
    }

    // @@protoc_insertion_point(class_scope:TW.VeChain.Proto.SigningInput)
    private static final wallet.core.jni.proto.VeChain.SigningInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.VeChain.SigningInput();
    }

    public static wallet.core.jni.proto.VeChain.SigningInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SigningInput>
        PARSER = new com.google.protobuf.AbstractParser<SigningInput>() {
      @java.lang.Override
      public SigningInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SigningInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SigningInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SigningInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.VeChain.SigningInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SigningOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TW.VeChain.Proto.SigningOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    com.google.protobuf.ByteString getEncoded();

    /**
     * <pre>
     * Signature.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * Transaction signing output.
   * </pre>
   *
   * Protobuf type {@code TW.VeChain.Proto.SigningOutput}
   */
  public  static final class SigningOutput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TW.VeChain.Proto.SigningOutput)
      SigningOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SigningOutput.newBuilder() to construct.
    private SigningOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SigningOutput() {
      encoded_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SigningOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              encoded_ = input.readBytes();
              break;
            }
            case 18: {

              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              wallet.core.jni.proto.VeChain.SigningOutput.class, wallet.core.jni.proto.VeChain.SigningOutput.Builder.class);
    }

    public static final int ENCODED_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString encoded_;
    /**
     * <pre>
     * Signed and encoded transaction bytes.
     * </pre>
     *
     * <code>bytes encoded = 1;</code>
     */
    public com.google.protobuf.ByteString getEncoded() {
      return encoded_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * Signature.
     * </pre>
     *
     * <code>bytes signature = 2;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!encoded_.isEmpty()) {
        output.writeBytes(1, encoded_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(2, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!encoded_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, encoded_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof wallet.core.jni.proto.VeChain.SigningOutput)) {
        return super.equals(obj);
      }
      wallet.core.jni.proto.VeChain.SigningOutput other = (wallet.core.jni.proto.VeChain.SigningOutput) obj;

      boolean result = true;
      result = result && getEncoded()
          .equals(other.getEncoded());
      result = result && getSignature()
          .equals(other.getSignature());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENCODED_FIELD_NUMBER;
      hash = (53 * hash) + getEncoded().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static wallet.core.jni.proto.VeChain.SigningOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(wallet.core.jni.proto.VeChain.SigningOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Transaction signing output.
     * </pre>
     *
     * Protobuf type {@code TW.VeChain.Proto.SigningOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TW.VeChain.Proto.SigningOutput)
        wallet.core.jni.proto.VeChain.SigningOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                wallet.core.jni.proto.VeChain.SigningOutput.class, wallet.core.jni.proto.VeChain.SigningOutput.Builder.class);
      }

      // Construct using wallet.core.jni.proto.VeChain.SigningOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        encoded_ = com.google.protobuf.ByteString.EMPTY;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return wallet.core.jni.proto.VeChain.internal_static_TW_VeChain_Proto_SigningOutput_descriptor;
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.SigningOutput getDefaultInstanceForType() {
        return wallet.core.jni.proto.VeChain.SigningOutput.getDefaultInstance();
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.SigningOutput build() {
        wallet.core.jni.proto.VeChain.SigningOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public wallet.core.jni.proto.VeChain.SigningOutput buildPartial() {
        wallet.core.jni.proto.VeChain.SigningOutput result = new wallet.core.jni.proto.VeChain.SigningOutput(this);
        result.encoded_ = encoded_;
        result.signature_ = signature_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof wallet.core.jni.proto.VeChain.SigningOutput) {
          return mergeFrom((wallet.core.jni.proto.VeChain.SigningOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(wallet.core.jni.proto.VeChain.SigningOutput other) {
        if (other == wallet.core.jni.proto.VeChain.SigningOutput.getDefaultInstance()) return this;
        if (other.getEncoded() != com.google.protobuf.ByteString.EMPTY) {
          setEncoded(other.getEncoded());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        wallet.core.jni.proto.VeChain.SigningOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (wallet.core.jni.proto.VeChain.SigningOutput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString encoded_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       */
      public com.google.protobuf.ByteString getEncoded() {
        return encoded_;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       */
      public Builder setEncoded(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encoded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signed and encoded transaction bytes.
       * </pre>
       *
       * <code>bytes encoded = 1;</code>
       */
      public Builder clearEncoded() {
        
        encoded_ = getDefaultInstance().getEncoded();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Signature.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * Signature.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signature.
       * </pre>
       *
       * <code>bytes signature = 2;</code>
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TW.VeChain.Proto.SigningOutput)
    }

    // @@protoc_insertion_point(class_scope:TW.VeChain.Proto.SigningOutput)
    private static final wallet.core.jni.proto.VeChain.SigningOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new wallet.core.jni.proto.VeChain.SigningOutput();
    }

    public static wallet.core.jni.proto.VeChain.SigningOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SigningOutput>
        PARSER = new com.google.protobuf.AbstractParser<SigningOutput>() {
      @java.lang.Override
      public SigningOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SigningOutput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SigningOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SigningOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public wallet.core.jni.proto.VeChain.SigningOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_VeChain_Proto_Clause_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_VeChain_Proto_Clause_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_VeChain_Proto_SigningInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_VeChain_Proto_SigningInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TW_VeChain_Proto_SigningOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TW_VeChain_Proto_SigningOutput_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rVeChain.proto\022\020TW.VeChain.Proto\"1\n\006Cla" +
      "use\022\n\n\002to\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\022\014\n\004data\030\003" +
      " \001(\014\"\320\001\n\014SigningInput\022\021\n\tchain_tag\030\001 \001(\r" +
      "\022\021\n\tblock_ref\030\002 \001(\004\022\022\n\nexpiration\030\003 \001(\r\022" +
      ")\n\007clauses\030\004 \003(\0132\030.TW.VeChain.Proto.Clau" +
      "se\022\026\n\016gas_price_coef\030\005 \001(\r\022\013\n\003gas\030\006 \001(\004\022" +
      "\022\n\ndepends_on\030\007 \001(\014\022\r\n\005nonce\030\010 \001(\004\022\023\n\013pr" +
      "ivate_key\030\t \001(\014\"3\n\rSigningOutput\022\017\n\007enco" +
      "ded\030\001 \001(\014\022\021\n\tsignature\030\002 \001(\014B\027\n\025wallet.c" +
      "ore.jni.protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_TW_VeChain_Proto_Clause_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TW_VeChain_Proto_Clause_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_VeChain_Proto_Clause_descriptor,
        new java.lang.String[] { "To", "Value", "Data", });
    internal_static_TW_VeChain_Proto_SigningInput_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TW_VeChain_Proto_SigningInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_VeChain_Proto_SigningInput_descriptor,
        new java.lang.String[] { "ChainTag", "BlockRef", "Expiration", "Clauses", "GasPriceCoef", "Gas", "DependsOn", "Nonce", "PrivateKey", });
    internal_static_TW_VeChain_Proto_SigningOutput_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TW_VeChain_Proto_SigningOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TW_VeChain_Proto_SigningOutput_descriptor,
        new java.lang.String[] { "Encoded", "Signature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
